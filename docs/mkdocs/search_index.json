{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to Assistance Platform\n\u00b6\n\n\nEnjoy reading our documentation!\n\n\nThe Assistance Platform is a project which aims on providing assistance to users in all thinkable situations. Therefore it offers a sleek REST API for clients to upload data (e.g. sensor data) related to a user. The user can activate / deactivate so called \u201cmodules\u201d. A module is some sort of extension of the \u201cAssistance Platform\u201d which consumes user data. These modules implement assistance logic (when to notify the user, when to send a mail etc.) and extract higher-level information from the stream of user / device events.\n\n\nThis project hosts the implementation of the Platform REST web service, the Module API and a Shared API between Modules and the Platform.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-assistance-platform",
            "text": "Enjoy reading our documentation!  The Assistance Platform is a project which aims on providing assistance to users in all thinkable situations. Therefore it offers a sleek REST API for clients to upload data (e.g. sensor data) related to a user. The user can activate / deactivate so called \u201cmodules\u201d. A module is some sort of extension of the \u201cAssistance Platform\u201d which consumes user data. These modules implement assistance logic (when to notify the user, when to send a mail etc.) and extract higher-level information from the stream of user / device events.  This project hosts the implementation of the Platform REST web service, the Module API and a Shared API between Modules and the Platform.",
            "title": "Welcome to Assistance Platform"
        },
        {
            "location": "/license/",
            "text": "Apache License\n\u00b6\n\n\nVersion 2.0, January 2004\n\n\n<\nhttp://www.apache.org/licenses/\n>\n\n\nTerms and Conditions for use, reproduction, and distribution\n\u00b6\n\n\n1. Definitions\n\u00b6\n\n\n\u201cLicense\u201d shall mean the terms and conditions for use, reproduction, and\ndistribution as defined by Sections 1 through 9 of this document.\n\n\n\u201cLicensor\u201d shall mean the copyright owner or entity authorized by the copyright\nowner that is granting the License.\n\n\n\u201cLegal Entity\u201d shall mean the union of the acting entity and all other entities\nthat control, are controlled by, or are under common control with that entity.\nFor the purposes of this definition, \u201ccontrol\u201d means \n(i)\n the power, direct or\nindirect, to cause the direction or management of such entity, whether by\ncontract or otherwise, or \n(ii)\n ownership of fifty percent (50%) or more of the\noutstanding shares, or \n(iii)\n beneficial ownership of such entity.\n\n\n\u201cYou\u201d (or \u201cYour\u201d) shall mean an individual or Legal Entity exercising\npermissions granted by this License.\n\n\n\u201cSource\u201d form shall mean the preferred form for making modifications, including\nbut not limited to software source code, documentation source, and configuration\nfiles.\n\n\n\u201cObject\u201d form shall mean any form resulting from mechanical transformation or\ntranslation of a Source form, including but not limited to compiled object code,\ngenerated documentation, and conversions to other media types.\n\n\n\u201cWork\u201d shall mean the work of authorship, whether in Source or Object form, made\navailable under the License, as indicated by a copyright notice that is included\nin or attached to the work (an example is provided in the Appendix below).\n\n\n\u201cDerivative Works\u201d shall mean any work, whether in Source or Object form, that\nis based on (or derived from) the Work and for which the editorial revisions,\nannotations, elaborations, or other modifications represent, as a whole, an\noriginal work of authorship. For the purposes of this License, Derivative Works\nshall not include works that remain separable from, or merely link (or bind by\nname) to the interfaces of, the Work and Derivative Works thereof.\n\n\n\u201cContribution\u201d shall mean any work of authorship, including the original version\nof the Work and any modifications or additions to that Work or Derivative Works\nthereof, that is intentionally submitted to Licensor for inclusion in the Work\nby the copyright owner or by an individual or Legal Entity authorized to submit\non behalf of the copyright owner. For the purposes of this definition,\n\u201csubmitted\u201d means any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems, and\nissue tracking systems that are managed by, or on behalf of, the Licensor for\nthe purpose of discussing and improving the Work, but excluding communication\nthat is conspicuously marked or otherwise designated in writing by the copyright\nowner as \u201cNot a Contribution.\u201d\n\n\n\u201cContributor\u201d shall mean Licensor and any individual or Legal Entity on behalf\nof whom a Contribution has been received by Licensor and subsequently\nincorporated within the Work.\n\n\n2. Grant of Copyright License\n\u00b6\n\n\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable copyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the Work and such\nDerivative Works in Source or Object form.\n\n\n3. Grant of Patent License\n\u00b6\n\n\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable (except as stated in this section) patent license to make, have\nmade, use, offer to sell, sell, import, and otherwise transfer the Work, where\nsuch license applies only to those patent claims licensable by such Contributor\nthat are necessarily infringed by their Contribution(s) alone or by combination\nof their Contribution(s) with the Work to which such Contribution(s) was\nsubmitted. If You institute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work or a\nContribution incorporated within the Work constitutes direct or contributory\npatent infringement, then any patent licenses granted to You under this License\nfor that Work shall terminate as of the date such litigation is filed.\n\n\n4. Redistribution\n\u00b6\n\n\nYou may reproduce and distribute copies of the Work or Derivative Works thereof\nin any medium, with or without modifications, and in Source or Object form,\nprovided that You meet the following conditions:\n\n\n\n\n(a)\n You must give any other recipients of the Work or Derivative Works a copy of\nthis License; and\n\n\n(b)\n You must cause any modified files to carry prominent notices stating that You\nchanged the files; and\n\n\n(c)\n You must retain, in the Source form of any Derivative Works that You distribute,\nall copyright, patent, trademark, and attribution notices from the Source form\nof the Work, excluding those notices that do not pertain to any part of the\nDerivative Works; and\n\n\n(d)\n If the Work includes a \u201cNOTICE\u201d text file as part of its distribution, then any\nDerivative Works that You distribute must include a readable copy of the\nattribution notices contained within such NOTICE file, excluding those notices\nthat do not pertain to any part of the Derivative Works, in at least one of the\nfollowing places: within a NOTICE text file distributed as part of the\nDerivative Works; within the Source form or documentation, if provided along\nwith the Derivative Works; or, within a display generated by the Derivative\nWorks, if and wherever such third-party notices normally appear. The contents of\nthe NOTICE file are for informational purposes only and do not modify the\nLicense. You may add Your own attribution notices within Derivative Works that\nYou distribute, alongside or as an addendum to the NOTICE text from the Work,\nprovided that such additional attribution notices cannot be construed as\nmodifying the License.\n\n\n\n\nYou may add Your own copyright statement to Your modifications and may provide\nadditional or different license terms and conditions for use, reproduction, or\ndistribution of Your modifications, or for any such Derivative Works as a whole,\nprovided Your use, reproduction, and distribution of the Work otherwise complies\nwith the conditions stated in this License.\n\n\n5. Submission of Contributions\n\u00b6\n\n\nUnless You explicitly state otherwise, any Contribution intentionally submitted\nfor inclusion in the Work by You to the Licensor shall be under the terms and\nconditions of this License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify the terms of\nany separate license agreement you may have executed with Licensor regarding\nsuch Contributions.\n\n\n6. Trademarks\n\u00b6\n\n\nThis License does not grant permission to use the trade names, trademarks,\nservice marks, or product names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the NOTICE file.\n\n\n7. Disclaimer of Warranty\n\u00b6\n\n\nUnless required by applicable law or agreed to in writing, Licensor provides the\nWork (and each Contributor provides its Contributions) on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,\nincluding, without limitation, any warranties or conditions of TITLE,\nNON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are\nsolely responsible for determining the appropriateness of using or\nredistributing the Work and assume any risks associated with Your exercise of\npermissions under this License.\n\n\n8. Limitation of Liability\n\u00b6\n\n\nIn no event and under no legal theory, whether in tort (including negligence),\ncontract, or otherwise, unless required by applicable law (such as deliberate\nand grossly negligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special, incidental,\nor consequential damages of any character arising as a result of this License or\nout of the use or inability to use the Work (including but not limited to\ndamages for loss of goodwill, work stoppage, computer failure or malfunction, or\nany and all other commercial damages or losses), even if such Contributor has\nbeen advised of the possibility of such damages.\n\n\n9. Accepting Warranty or Additional Liability\n\u00b6\n\n\nWhile redistributing the Work or Derivative Works thereof, You may choose to\noffer, and charge a fee for, acceptance of support, warranty, indemnity, or\nother liability obligations and/or rights consistent with this License. However,\nin accepting such obligations, You may act only on Your own behalf and on Your\nsole responsibility, not on behalf of any other Contributor, and only if You\nagree to indemnify, defend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason of your\naccepting any such warranty or additional liability.\n\n\nEND OF TERMS AND CONDITIONS\n\n\nAPPENDIX: How to apply the Apache License to your work\n\u00b6\n\n\nTo apply the Apache License to your work, attach the following boilerplate\nnotice, with the fields enclosed by brackets \n[]\n replaced with your own\nidentifying information. (Don\u2019t include the brackets!) The text should be\nenclosed in the appropriate comment syntax for the file format. We also\nrecommend that a file or class name and description of purpose be included on\nthe same \u201cprinted page\u201d as the copyright notice for easier identification within\nthird-party archives.\n\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "title": "License"
        },
        {
            "location": "/license/#apache-license",
            "text": "Version 2.0, January 2004  < http://www.apache.org/licenses/ >",
            "title": "Apache License"
        },
        {
            "location": "/license/#terms-and-conditions-for-use-reproduction-and-distribution",
            "text": "",
            "title": "Terms and Conditions for use, reproduction, and distribution"
        },
        {
            "location": "/license/#1-definitions",
            "text": "\u201cLicense\u201d shall mean the terms and conditions for use, reproduction, and\ndistribution as defined by Sections 1 through 9 of this document.  \u201cLicensor\u201d shall mean the copyright owner or entity authorized by the copyright\nowner that is granting the License.  \u201cLegal Entity\u201d shall mean the union of the acting entity and all other entities\nthat control, are controlled by, or are under common control with that entity.\nFor the purposes of this definition, \u201ccontrol\u201d means  (i)  the power, direct or\nindirect, to cause the direction or management of such entity, whether by\ncontract or otherwise, or  (ii)  ownership of fifty percent (50%) or more of the\noutstanding shares, or  (iii)  beneficial ownership of such entity.  \u201cYou\u201d (or \u201cYour\u201d) shall mean an individual or Legal Entity exercising\npermissions granted by this License.  \u201cSource\u201d form shall mean the preferred form for making modifications, including\nbut not limited to software source code, documentation source, and configuration\nfiles.  \u201cObject\u201d form shall mean any form resulting from mechanical transformation or\ntranslation of a Source form, including but not limited to compiled object code,\ngenerated documentation, and conversions to other media types.  \u201cWork\u201d shall mean the work of authorship, whether in Source or Object form, made\navailable under the License, as indicated by a copyright notice that is included\nin or attached to the work (an example is provided in the Appendix below).  \u201cDerivative Works\u201d shall mean any work, whether in Source or Object form, that\nis based on (or derived from) the Work and for which the editorial revisions,\nannotations, elaborations, or other modifications represent, as a whole, an\noriginal work of authorship. For the purposes of this License, Derivative Works\nshall not include works that remain separable from, or merely link (or bind by\nname) to the interfaces of, the Work and Derivative Works thereof.  \u201cContribution\u201d shall mean any work of authorship, including the original version\nof the Work and any modifications or additions to that Work or Derivative Works\nthereof, that is intentionally submitted to Licensor for inclusion in the Work\nby the copyright owner or by an individual or Legal Entity authorized to submit\non behalf of the copyright owner. For the purposes of this definition,\n\u201csubmitted\u201d means any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems, and\nissue tracking systems that are managed by, or on behalf of, the Licensor for\nthe purpose of discussing and improving the Work, but excluding communication\nthat is conspicuously marked or otherwise designated in writing by the copyright\nowner as \u201cNot a Contribution.\u201d  \u201cContributor\u201d shall mean Licensor and any individual or Legal Entity on behalf\nof whom a Contribution has been received by Licensor and subsequently\nincorporated within the Work.",
            "title": "1. Definitions"
        },
        {
            "location": "/license/#2-grant-of-copyright-license",
            "text": "Subject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable copyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the Work and such\nDerivative Works in Source or Object form.",
            "title": "2. Grant of Copyright License"
        },
        {
            "location": "/license/#3-grant-of-patent-license",
            "text": "Subject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable (except as stated in this section) patent license to make, have\nmade, use, offer to sell, sell, import, and otherwise transfer the Work, where\nsuch license applies only to those patent claims licensable by such Contributor\nthat are necessarily infringed by their Contribution(s) alone or by combination\nof their Contribution(s) with the Work to which such Contribution(s) was\nsubmitted. If You institute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work or a\nContribution incorporated within the Work constitutes direct or contributory\npatent infringement, then any patent licenses granted to You under this License\nfor that Work shall terminate as of the date such litigation is filed.",
            "title": "3. Grant of Patent License"
        },
        {
            "location": "/license/#4-redistribution",
            "text": "You may reproduce and distribute copies of the Work or Derivative Works thereof\nin any medium, with or without modifications, and in Source or Object form,\nprovided that You meet the following conditions:   (a)  You must give any other recipients of the Work or Derivative Works a copy of\nthis License; and  (b)  You must cause any modified files to carry prominent notices stating that You\nchanged the files; and  (c)  You must retain, in the Source form of any Derivative Works that You distribute,\nall copyright, patent, trademark, and attribution notices from the Source form\nof the Work, excluding those notices that do not pertain to any part of the\nDerivative Works; and  (d)  If the Work includes a \u201cNOTICE\u201d text file as part of its distribution, then any\nDerivative Works that You distribute must include a readable copy of the\nattribution notices contained within such NOTICE file, excluding those notices\nthat do not pertain to any part of the Derivative Works, in at least one of the\nfollowing places: within a NOTICE text file distributed as part of the\nDerivative Works; within the Source form or documentation, if provided along\nwith the Derivative Works; or, within a display generated by the Derivative\nWorks, if and wherever such third-party notices normally appear. The contents of\nthe NOTICE file are for informational purposes only and do not modify the\nLicense. You may add Your own attribution notices within Derivative Works that\nYou distribute, alongside or as an addendum to the NOTICE text from the Work,\nprovided that such additional attribution notices cannot be construed as\nmodifying the License.   You may add Your own copyright statement to Your modifications and may provide\nadditional or different license terms and conditions for use, reproduction, or\ndistribution of Your modifications, or for any such Derivative Works as a whole,\nprovided Your use, reproduction, and distribution of the Work otherwise complies\nwith the conditions stated in this License.",
            "title": "4. Redistribution"
        },
        {
            "location": "/license/#5-submission-of-contributions",
            "text": "Unless You explicitly state otherwise, any Contribution intentionally submitted\nfor inclusion in the Work by You to the Licensor shall be under the terms and\nconditions of this License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify the terms of\nany separate license agreement you may have executed with Licensor regarding\nsuch Contributions.",
            "title": "5. Submission of Contributions"
        },
        {
            "location": "/license/#6-trademarks",
            "text": "This License does not grant permission to use the trade names, trademarks,\nservice marks, or product names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the NOTICE file.",
            "title": "6. Trademarks"
        },
        {
            "location": "/license/#7-disclaimer-of-warranty",
            "text": "Unless required by applicable law or agreed to in writing, Licensor provides the\nWork (and each Contributor provides its Contributions) on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,\nincluding, without limitation, any warranties or conditions of TITLE,\nNON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are\nsolely responsible for determining the appropriateness of using or\nredistributing the Work and assume any risks associated with Your exercise of\npermissions under this License.",
            "title": "7. Disclaimer of Warranty"
        },
        {
            "location": "/license/#8-limitation-of-liability",
            "text": "In no event and under no legal theory, whether in tort (including negligence),\ncontract, or otherwise, unless required by applicable law (such as deliberate\nand grossly negligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special, incidental,\nor consequential damages of any character arising as a result of this License or\nout of the use or inability to use the Work (including but not limited to\ndamages for loss of goodwill, work stoppage, computer failure or malfunction, or\nany and all other commercial damages or losses), even if such Contributor has\nbeen advised of the possibility of such damages.",
            "title": "8. Limitation of Liability"
        },
        {
            "location": "/license/#9-accepting-warranty-or-additional-liability",
            "text": "While redistributing the Work or Derivative Works thereof, You may choose to\noffer, and charge a fee for, acceptance of support, warranty, indemnity, or\nother liability obligations and/or rights consistent with this License. However,\nin accepting such obligations, You may act only on Your own behalf and on Your\nsole responsibility, not on behalf of any other Contributor, and only if You\nagree to indemnify, defend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason of your\naccepting any such warranty or additional liability.  END OF TERMS AND CONDITIONS",
            "title": "9. Accepting Warranty or Additional Liability"
        },
        {
            "location": "/license/#appendix-how-to-apply-the-apache-license-to-your-work",
            "text": "To apply the Apache License to your work, attach the following boilerplate\nnotice, with the fields enclosed by brackets  []  replaced with your own\nidentifying information. (Don\u2019t include the brackets!) The text should be\nenclosed in the appropriate comment syntax for the file format. We also\nrecommend that a file or class name and description of purpose be included on\nthe same \u201cprinted page\u201d as the copyright notice for easier identification within\nthird-party archives.  Copyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "title": "APPENDIX: How to apply the Apache License to your work"
        },
        {
            "location": "/api/client-actions-and-commands/",
            "text": "Description\n\u00b6\n\n\nA set of actions that server could send to a client to run particular task/tasks to control the client device.\n\n\nTypes overview\n\u00b6\n\n\n\n\nVOLUME_UP - raises the volume\n\n\nVOLUME_DOWN - lowers the volume\n\n\nBRIGHTNESS_UP - increases display brightness\n\n\nBRIGHTNESS_DOWN - decreases display brightness\n\n\nVIBRATE - vibration for a certain time\n\n\n\n\nType: VOLUME_UP / VOLUME_DOWN\n\u00b6\n\n\n{\n    \"type\" : \"VOLUME_UP\",\n    \"amount\" : float,  // range 0.0-1.0, in percent\n    \"duration\" : long  // in milliseconds\n}\n\n\n\n\nType: BRIGHTNESS_UP / BRIGHTNESS_DOWN\n\u00b6\n\n\n{\n    \"type\" : \"BRIGHTNESS_UP\",\n    \"amount\" : float,  // range 0.0-1.0, in percent\n    \"duration\" : long  // in milliseconds\n}\n\n\n\n\nType: VIBRATE\n\u00b6\n\n\n{\n    \"type\" : \"VIBRATE\",\n    \"duration\" : long  // in milliseconds\n}",
            "title": "Client actions and commands"
        },
        {
            "location": "/api/client-actions-and-commands/#description",
            "text": "A set of actions that server could send to a client to run particular task/tasks to control the client device.",
            "title": "Description"
        },
        {
            "location": "/api/client-actions-and-commands/#types-overview",
            "text": "VOLUME_UP - raises the volume  VOLUME_DOWN - lowers the volume  BRIGHTNESS_UP - increases display brightness  BRIGHTNESS_DOWN - decreases display brightness  VIBRATE - vibration for a certain time",
            "title": "Types overview"
        },
        {
            "location": "/api/client-actions-and-commands/#type-volume_up-volume_down",
            "text": "{\n    \"type\" : \"VOLUME_UP\",\n    \"amount\" : float,  // range 0.0-1.0, in percent\n    \"duration\" : long  // in milliseconds\n}",
            "title": "Type: VOLUME_UP / VOLUME_DOWN"
        },
        {
            "location": "/api/client-actions-and-commands/#type-brightness_up-brightness_down",
            "text": "{\n    \"type\" : \"BRIGHTNESS_UP\",\n    \"amount\" : float,  // range 0.0-1.0, in percent\n    \"duration\" : long  // in milliseconds\n}",
            "title": "Type: BRIGHTNESS_UP / BRIGHTNESS_DOWN"
        },
        {
            "location": "/api/client-actions-and-commands/#type-vibrate",
            "text": "{\n    \"type\" : \"VIBRATE\",\n    \"duration\" : long  // in milliseconds\n}",
            "title": "Type: VIBRATE"
        },
        {
            "location": "/api/client-feedback-channel-format/",
            "text": "The Client Feedback Format is a channel server -> client (one way feedback). The main purpose of the channel is to provide information about module activities (cards) on the server for clients.\n\n\nShort overview of JSON format without content\n\u00b6\n\n\n[ {\"moduleId\" : string,\n  \"content\" : { // your content type object goes here\n        },\n  \"created\": \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n  },...\n]\n\n\n\n\nContent type: text item\n\u00b6\n\n\n{\n    \"type\" : \"text\",  \n    \"caption\" : string, // free text\n    \"target\" : string,  // (optional, aber nicht bei Button, hat eine der beiden folgenden gesetzt) - url - app\n    \"priority\" : Integer,  // 1 - X (optional, wird nur benutzt wenn in group), standard = 1\n    \"alignment\" : string,  // - \"left\", - \"center\", - \"right\"\n    \"style\" : [], // possible features (highly discussable): \n    //- title1 (The font used for first level hierarchical headings.)\n    //- title2 (The font used for second level hierarchical headings.)\n    //- title3 (The font used for third level hierarchical headings.)\n    //- headline (The font used for headings.)\n    //- subheadline (The font used for subheadings.)\n    //- body (The font used for body text.)\n    //- footnote (The font used in footnotes.)\n    //- caption[1] (The font used for standard captions.)\n    //- caption2 (The font used for alternate captions.)\n    //- callout (The font used for callouts.)\n    \"highlighted\" : boolean\n}\n\n\n\n\nContent type: image item\n\u00b6\n\n\n{\n    \"type\" : \"image\",  \n    \"source\" : string,  // URL \n    \"target\" : string,  // (optional, aber nicht bei Button, hat eine der beiden folgenden gesetzt) - url - app\n    \"priority\" : Integer,  // 1 - X (optional, wird nur benutzt wenn in group), standard = 1\n}\n\n\n\n\nContent type: map item\n\u00b6\n\n\n{\n    \"type\" : \"map\",  \n    \"points\" : [[2.5, 5.6],[4.2, 6.2]],\n    \"showUserLocation\" : boolean,   // (boolean, optional, true zeigt aktuelle user location)\n    \"target\" : string,  // (optional, aber nicht bei Button, hat eine der beiden folgenden gesetzt) - url - app\n    \"priority\" : Integer,  // 1 - X (optional, wird nur benutzt wenn in group), standard = 1\n}\n\n\n\n\nContent type: button item\n\u00b6\n\n\n{\n    \"type\" : \"button\",  \n    \"caption\" : string, // free text\n    \"target\" : string,  // (optional, aber nicht bei Button, hat eine der beiden folgenden gesetzt) - url - app\n    \"priority\" : Integer,  // 1 - X (optional, wird nur benutzt wenn in group), standard = 1\n}\n\n\n\n\nContent type: group of items\n\u00b6\n\n\n{\n    \"type\" : \"group\",  \n    \"alignment\" : string,  // - horizontal, - vertical (optional, standard: horizontal)\n    \"content\" : [...],   // here more content type objects\n}",
            "title": "Client feedback channel format"
        },
        {
            "location": "/api/client-feedback-channel-format/#short-overview-of-json-format-without-content",
            "text": "[ {\"moduleId\" : string,\n  \"content\" : { // your content type object goes here\n        },\n  \"created\": \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n  },...\n]",
            "title": "Short overview of JSON format without content"
        },
        {
            "location": "/api/client-feedback-channel-format/#content-type-text-item",
            "text": "{\n    \"type\" : \"text\",  \n    \"caption\" : string, // free text\n    \"target\" : string,  // (optional, aber nicht bei Button, hat eine der beiden folgenden gesetzt) - url - app\n    \"priority\" : Integer,  // 1 - X (optional, wird nur benutzt wenn in group), standard = 1\n    \"alignment\" : string,  // - \"left\", - \"center\", - \"right\"\n    \"style\" : [], // possible features (highly discussable): \n    //- title1 (The font used for first level hierarchical headings.)\n    //- title2 (The font used for second level hierarchical headings.)\n    //- title3 (The font used for third level hierarchical headings.)\n    //- headline (The font used for headings.)\n    //- subheadline (The font used for subheadings.)\n    //- body (The font used for body text.)\n    //- footnote (The font used in footnotes.)\n    //- caption[1] (The font used for standard captions.)\n    //- caption2 (The font used for alternate captions.)\n    //- callout (The font used for callouts.)\n    \"highlighted\" : boolean\n}",
            "title": "Content type: text item"
        },
        {
            "location": "/api/client-feedback-channel-format/#content-type-image-item",
            "text": "{\n    \"type\" : \"image\",  \n    \"source\" : string,  // URL \n    \"target\" : string,  // (optional, aber nicht bei Button, hat eine der beiden folgenden gesetzt) - url - app\n    \"priority\" : Integer,  // 1 - X (optional, wird nur benutzt wenn in group), standard = 1\n}",
            "title": "Content type: image item"
        },
        {
            "location": "/api/client-feedback-channel-format/#content-type-map-item",
            "text": "{\n    \"type\" : \"map\",  \n    \"points\" : [[2.5, 5.6],[4.2, 6.2]],\n    \"showUserLocation\" : boolean,   // (boolean, optional, true zeigt aktuelle user location)\n    \"target\" : string,  // (optional, aber nicht bei Button, hat eine der beiden folgenden gesetzt) - url - app\n    \"priority\" : Integer,  // 1 - X (optional, wird nur benutzt wenn in group), standard = 1\n}",
            "title": "Content type: map item"
        },
        {
            "location": "/api/client-feedback-channel-format/#content-type-button-item",
            "text": "{\n    \"type\" : \"button\",  \n    \"caption\" : string, // free text\n    \"target\" : string,  // (optional, aber nicht bei Button, hat eine der beiden folgenden gesetzt) - url - app\n    \"priority\" : Integer,  // 1 - X (optional, wird nur benutzt wenn in group), standard = 1\n}",
            "title": "Content type: button item"
        },
        {
            "location": "/api/client-feedback-channel-format/#content-type-group-of-items",
            "text": "{\n    \"type\" : \"group\",  \n    \"alignment\" : string,  // - horizontal, - vertical (optional, standard: horizontal)\n    \"content\" : [...],   // here more content type objects\n}",
            "title": "Content type: group of items"
        },
        {
            "location": "/api/rest-api-for-clients/",
            "text": "REST API for Clients\n\u00b6\n\n\nWelcome to REST API for clients!\n\n\nThis page briefly describes and explained JSON API communication protocol between assistance clients and server back-end. \n\n\nQuick access\n\u00b6\n\n\n\n\nError messages\n\n\nUser: Registration\n\n\nUser: Password reset (NOT IMPLEMENTED!)\n\n\nUser: Log in\n\n\nUser: Refresh token\n\n\nUser: Register for back-channel\n\n\nUser: List users devices\n\n\nUser: Set user defined name for device\n\n\nUser: Get user\u2019s profile: short version\n\n\nUser: Get user\u2019s profile: long version\n\n\nUser: UPDATE user\u2019s profile (NOT IMPLEMENTED!)\n\n\nAssistance: Getting list of available modules\n\n\nAssistance: Activate Module\n\n\nAssistance: Deactivate Module\n\n\nAssistance: List of current activations\n\n\nAssistance: Current module feedback\n\n\nModule Assistance: Current information from modules\n\n\nModule Assistance: Current information from specific module\n\n\nModule Assistance: Custom request to a module\n\n\nSensor data: Upload\n\n\n\n\nCurrent (v0.6)\n\u00b6\n\n\nERROR MESSAGES\n\u00b6\n\n\nThe assistance platform REST API tries to return proper HTTP status codes.\n\n 200 - OK - Success\n\n 400 - Bad request - The request was invalid, e.g. incomplete\n\n 401 - Unauthorized - The X-AUTH-TOKEN was not provided\n\n 500 - Internal server error - Something went wrong on server side\n\n\nIf something went wrong which needs more specification, mostly the API provides an error like this.\n\n\nHTTP/1.1 400 Bad Request\nContent-Length: 39\n\n{\n\"code\" : integer,\n\"message\" : string\n}\n\n\n\n\n\nThe code is a machine readable code which specifies a certain error type.\nThe message is a descriptive text (which can change in future).\n\n\nCurrent errors for the User API are:\n\n 0 - Unspecified error\n\n 1 - Unauthorized\n\n 2 - Bad authentication data (email / password was wrong)\n\n 3 - The user with the provided email already exists.\n\n 4 - Not all parameters (email and password) were provided.\n\n 5 - The module id was not provided.\n\n 6 - The module is already activated.\n\n 7 - The module is not activated.\n\n 8 - The module does not exist.\n\n 9 - The user is already logged in. [thrown when registering]\n\n 10 - Missing parameters (general).\n\n 11 - Invalid parameters (general).\n\n 12 - Device ID not known.\n\n 13 - Platform is not supported.\n\n\nFor the module API:\n\n 995 - Not all required parameters for module registration were provided.\n\n 996 - The module with the provided id already exists.\n* 997 - The user with the provided id does not exist.\n\n\nUSER\n\u00b6\n\n\nREGISTERING A USER\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nPOST /users/register\n\n{\n\"email\" : \"example@example.com\", \n\"password\" : \"password\"\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n{\n\"user_id\" : integer\n}\n\n\n\n\nReset password\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nGET /users/password\n\n{\n\"email\" : \"hand.mustermann@example.com\"\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n\n\n\nThen user should received confirmation url for password reset on his email address (password randomly generated). User confirms that and then he is able to log in with that randomly generated password again.\n\n\nLOG IN\n\u00b6\n\n\nNote: The \u201cdevice\u201d object should be used like following.\n\n\n\n\nSend spec on first login (os, os_version, etc.). The device id will be returned.\n\n\nOn subsequent logins JUST send the id, without spec.\n\n\nIf changes to the spec are detected (os_version, device_identifier, etc.), then provide id AND spec - this\u2019ll update the spec for the device\n\n\n\n\nNOTE: device_identifier does NOT equal id / device_id. id / device_id are internal numbers for devices assigned by the assistance platform (server). Device identifier is the identifier provided by the client platform and should be provided in the specification.\n\n\n\n\nREQUEST\n\n\n\n\nPOST /users/login\n\n{\n\"email\" : \"example@example.com\", \n\"password\" : \"password\",\n\"device\" : { \n    \"id\" : long, /* Optional: Provide ONLY id OR id and spec OR spec only - See description above!! */\n    \"os\" : string, /* e.g. android, ios, blackberry, windowsphone */\n    \"os_version\" : string, /* e.g. 5.1.1 */\n    \"brand\" : string, /* e.g. Samsung */\n    \"model\" : string, /* e.g. Galaxy XY */\n    \"device_identifier\" : string\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n{\n\"token\" : string,\n\"device_id\" : long\n}\n\n\n\n\nREFRESH TOKEN\n\u00b6\n\n\nThe client can request a new token within the time range of validity (normally 24 hours). This new token will be again valid for 24 hours.\n\n\n\n\nREQUEST\n\n\n\n\nPOST /users/refresh_token\nX-AUTH-TOKEN: your_token\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n{\n\"token\" : string\n}\n\n\n\n\nRegister for back-channel\n\u00b6\n\n\nA device needs to explicitly register a back-channel from the platform to this device of the user, because the project uses existing messaging services especially for the mobile devices. So the client has to pass the token of the specific service to the platform.\n\n\n(Note: This is NOT done / integrated in the login request, because it needs a asynchronous request to acquire the token from the respective service)\n\n\n\n\nREQUEST\n\n\n\n\nPOST /devices/register_for_messaging\nX-AUTH-TOKEN: your_token\n\n{ \n  \"device_id\" : long, /* This is the ID that is contained in the login response */ \n  \"messaging_registration_id\" : string /* This is the ID / Token that is returned form the respective service, e.g. GCM */\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n{\n}\n\n\n\n\nList users devices\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nGET /devices/list\nX-AUTH-TOKEN: your_token\n\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n[\n    {\n        \"id\": long,\n        \"userId\": long,\n        \"brand\": string,\n        \"model\": string,\n        \"messagingRegistrationId\": string,\n        \"userDefinedName\": string,\n        \"lastUsage\": long,\n        \"os\": string,\n        \"os_version\": string,\n        \"device_identifier\": string\n    }, ...\n]\n\n\n\n\nSet user defined name for device\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nPOST /devices/set_user_defined_name\nX-AUTH-TOKEN: your_token\n\n{ \n  \"device_id\" : long,\n  \"user_defined_name\" : string /* The user defined name for a device, e.g. \"My Galaxy\" */\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n{\n}\n\n\n\n\nGet user\u2019s profile: short version\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nGET /users/profile/short\nX-AUTH-TOKEN: your_token\n\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n{\n\"firstName\" : \"Hans\",\n\"lastName\" : \"Mustermann\",\n\"email\" : \"hans.mustermann@domain.de\",\n\"lastLogin\" : long,\n\"joinedSince\" : long,\n}\n\n\n\n\nGet user\u2019s profile: long version\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nGET /users/profile/long\nX-AUTH-TOKEN: your_token\n\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n{\n\"firstName\" : \"Hans\",\n\"lastName\" : \"Mustermann\",\n\"email\" : \"hans.mustermann@domain.de\",\n\"services [NOT IMPLEMENTED]\"  : [{\n               \"name\" : \"Google\",\n               \"firstname\" : \"Hanso\",\n               \"lastname\" : \"Mustermanno\",\n               \"email\" : \"hans.mustermann@gmail.com\",\n               \"updated\" : long,\n               \"created\" : long\n               },\n               {\n               \"name\" : \"Facebook\",\n               \"firstname\" : \"Dieter\",\n               \"lastname\" : \"Klein\",\n               \"email\" : \"hans.mustermann@gmx.de\",\n               \"updated\" : long,\n               \"created\" : long\n               },\n               {\n               \"name\" : \"Xing\",\n               \"firstname\" : \"Hans\",\n               \"lastname\" : \"Mustermann\",\n               \"email\" : \"hans.mustermann@gmail.com\",\n               \"updated\" : long,\n               \"created\" : long\n               }],\n\"lastLogin\" : long,\n\"joinedSince\" : long,\n}\n\n\n\n\nUPDATE user\u2019s profile\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nPUT /users/profile\nX-AUTH-TOKEN: your_token\n\n{\n    \"firstname\" : \"Hans\",\n    \"lastname\" : \"Mustermann\",\n    \"services [NOT IMPLEMENTED]\"  : [{\n        \"name\" : \"Google\",\n        \"email\" : \"hans.mustermann@gmail.com\"\n    },\n    {\n        \"name\" : \"Facebook\",\n        \"email\" : \"hans.mustermann@gmx.de\"\n    }]\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n\n\n\nGET LIST OF AVAILABLE MODULES\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\n(optional) :language = ISO 639-1 code for client language (e.g. en, de) [if parameter not specified, it is en]\n\n\nGET /assistance/list/:language\nX-AUTH-TOKEN: your_token\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n[\n    {\n        \"name\": \"Quantified self\",\n        \"id\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.quantifiedself\",\n        \"logoUrl\": \"http://xyz.de/lgo123.png\",\n        \"descriptionShort\": \"Quantifies you in every way\",\n        \"descriptionLong\": \"Really quantifies out of every angle\",\n        \"requiredCapabilities\": [\n            { \n              \"type\" : \"accelerometer\",\n                \"collection_interval\": double, /* The maximum interval between event readings of this type (in seconds). Readings can be cached on the client. (in seconds) double; 1.0 = 1 measurement per second, 60.0 = 1 measurement per minute */\n                \"update_interval\": double, /* The maximum interval in seconds after which the sensor readings have to be sent to the platform. -1.0 means that that the readings are only sent when the device is connected via WiFi or hasn't sent any updates for 24 hours. */\n            },\n            { \n              \"type\" : \"position\",\n                \"accuracy\": int, /* Only available for the position sensor. 0: low, 1: balanced, 2: best */\n                \"collection_interval\": double,\n                \"update_interval\": double\n            }\n        ],\n        \"optionalCapabilites\": [\n            { \n              \"type\" : \"facebooktoken\",\n                \"permissions\": array of string /* The permissions to request from facebook for this module. e.g. [\"email\", \"public_profile\", \"user_friends\"] */\n            }\n        ],\n        \"copyright\": \"TK Department TU Darmstadt\"\n        \"supportEmail\": \"support@xy.de\" /* E-Mail address where the end-user can get support regarding this module */\n    },\n    {\n        \"name\": \"Hot Places\",\n        \"id\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.hotplaces\",\n        \"logoUrl\": \"http://blabla.de/hotzone.png\",\n        \"descriptionShort\": \"Finds the hottest places\",\n        \"descriptionLong\": \"Finds the hottest places while you are moving\",\n        \"requiredCapabilities\": [\n{ \n              \"type\" : \"position\",\n                \"collection_frequency\": double, \n                \"required_update_frequency\": double, \n                \"min_required_readings_on_update\": int \n            }\n        ],\n        \"optionalCapabilites\": null,\n        \"copyright\": \"TK Department TU Darmstadt\",\n        \"supportEmail\": \"support@xy.de\" \n    }\n]\n\n\n\n\nACTIVATE A MODULE\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nPOST /assistance/activate\nX-AUTH-TOKEN: your_token\n\n{\n   \"module_id\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.quantifiedself\"\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n\n\n\nDEACTIVATE A MODULE\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nPOST /assistance/deactivate\nX-AUTH-TOKEN: your_token\n\n{\n   \"module_id\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.quantifiedself\"\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n\n\n\nList of current activations\n\u00b6\n\n\nReturns an array of IDs of the activated modules (for the authorized user).\n\n\n\n\nREQUEST\n\n\n\n\nGET /assistance/activations\nX-AUTH-TOKEN: your_token\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n[ \n    \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.quantifiedself\",\n]\n\n\n\n\nCurrent information from modules\n\u00b6\n\n\nReturns a list of \u201cmodule information cards\u201d from the currently activated modules. A module information card provides a container of data which represents the last relevant information for the requesting user.\n\n\n(required) :deviceId - The device id of the requesting device.\n\n\nThe content specification can be found here \nClient Feedback Channel Format\n\n\n\n\nREQUEST\n\n\n\n\nGET /assistance/current/:deviceId\nX-AUTH-TOKEN: your_token\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n[\n    {\n        \"modulePackageName\": string,\n        \"content\": {\n            \"type\": string,\n            ...\n        },\n        \"created\": date\n    },\n    {\n        \"modulePackageName\": string,\n        \"content\": {\n            \"type\": string,\n            ...\n        },\n        \"created\": date\n    }\n]\n\n\n\n\nCurrent information from specific module\n\u00b6\n\n\nReturns a list of \u201cmodule information cards\u201d from the requested module.\n\n\n(required) :moduleId - The id of the module which should be asked about most current information.\n(required) :deviceId - The device id of the requesting device.\n\n\n\n\nREQUEST\n\n\n\n\nGET /assistance/:moduleId/current/:deviceId\nX-AUTH-TOKEN: your_token\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n[\n    {\n        \"moduleId\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.hotplaces\",\n        \"timestamp\": 1446751643000,\n        \"payload\": string\n    }\n]\n\n\n\n\nCustom request to a module\n\u00b6\n\n\nWith this endpoint it is possible to send very specific requests to a module. Normally this will only be used by module-specific clients. The platform acts like a proxy in this case.\n\n\n(required) :moduleId - The id of the module which should be asked about most current information.\n(required) *path - The path that should be requested on the module.\n\n\nCurrently only GET and POST requests are possible.\n\n\n\n\nREQUEST\n\n\n\n\nGET/POST /assistance/:moduleId/custom/*path\nX-AUTH-TOKEN: your_token\n\n(optional) your POST-data\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 SPECIFIED BY RESPONDING MODULE\n\nSPECIFIED BY RESPONDING MODULE\n\n\n\n\nSENSOR DATA\n\u00b6\n\n\nUPLOADING SENSOR DATA\n\u00b6\n\n\nThe upload endpoint allows to upload multiple collected sensor readings in batch mode.\n\n\nNOTE:\n The sensor readings have to be sorted by time descanding, so the oldest events appear at first in the JSON.\n\n\n\n\nREQUEST\n\n\n\n\nPOST /sensordata/upload\nX-AUTH-TOKEN: your_token\n\n{\n   \"device_id\" : the current device id (returned on login)\n   \"sensorreadings\" : [\n     {\n        \"type\" : sensortype (see below),\n        ... attributes of sensor (see below) ...\n     }\n   ]\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n\n\n\nThe supported sensor types and required fields can be found here:\n \nSensor types",
            "title": "Rest api for clients"
        },
        {
            "location": "/api/rest-api-for-clients/#rest-api-for-clients",
            "text": "Welcome to REST API for clients!  This page briefly describes and explained JSON API communication protocol between assistance clients and server back-end.",
            "title": "REST API for Clients"
        },
        {
            "location": "/api/rest-api-for-clients/#quick-access",
            "text": "Error messages  User: Registration  User: Password reset (NOT IMPLEMENTED!)  User: Log in  User: Refresh token  User: Register for back-channel  User: List users devices  User: Set user defined name for device  User: Get user\u2019s profile: short version  User: Get user\u2019s profile: long version  User: UPDATE user\u2019s profile (NOT IMPLEMENTED!)  Assistance: Getting list of available modules  Assistance: Activate Module  Assistance: Deactivate Module  Assistance: List of current activations  Assistance: Current module feedback  Module Assistance: Current information from modules  Module Assistance: Current information from specific module  Module Assistance: Custom request to a module  Sensor data: Upload",
            "title": "Quick access"
        },
        {
            "location": "/api/rest-api-for-clients/#current-v06",
            "text": "",
            "title": "Current (v0.6)"
        },
        {
            "location": "/api/rest-api-for-clients/#error-messages",
            "text": "The assistance platform REST API tries to return proper HTTP status codes.  200 - OK - Success  400 - Bad request - The request was invalid, e.g. incomplete  401 - Unauthorized - The X-AUTH-TOKEN was not provided  500 - Internal server error - Something went wrong on server side  If something went wrong which needs more specification, mostly the API provides an error like this.  HTTP/1.1 400 Bad Request\nContent-Length: 39\n\n{\n\"code\" : integer,\n\"message\" : string\n}  The code is a machine readable code which specifies a certain error type.\nThe message is a descriptive text (which can change in future).  Current errors for the User API are:  0 - Unspecified error  1 - Unauthorized  2 - Bad authentication data (email / password was wrong)  3 - The user with the provided email already exists.  4 - Not all parameters (email and password) were provided.  5 - The module id was not provided.  6 - The module is already activated.  7 - The module is not activated.  8 - The module does not exist.  9 - The user is already logged in. [thrown when registering]  10 - Missing parameters (general).  11 - Invalid parameters (general).  12 - Device ID not known.  13 - Platform is not supported.  For the module API:  995 - Not all required parameters for module registration were provided.  996 - The module with the provided id already exists.\n* 997 - The user with the provided id does not exist.",
            "title": "ERROR MESSAGES"
        },
        {
            "location": "/api/rest-api-for-clients/#user",
            "text": "",
            "title": "USER"
        },
        {
            "location": "/api/rest-api-for-clients/#registering-a-user",
            "text": "REQUEST   POST /users/register\n\n{\n\"email\" : \"example@example.com\", \n\"password\" : \"password\"\n}   RESPONSE   HTTP/1.1 200 OK\n\n{\n\"user_id\" : integer\n}",
            "title": "REGISTERING A USER"
        },
        {
            "location": "/api/rest-api-for-clients/#reset-password",
            "text": "REQUEST   GET /users/password\n\n{\n\"email\" : \"hand.mustermann@example.com\"\n}   RESPONSE   HTTP/1.1 200 OK  Then user should received confirmation url for password reset on his email address (password randomly generated). User confirms that and then he is able to log in with that randomly generated password again.",
            "title": "Reset password"
        },
        {
            "location": "/api/rest-api-for-clients/#log-in",
            "text": "Note: The \u201cdevice\u201d object should be used like following.   Send spec on first login (os, os_version, etc.). The device id will be returned.  On subsequent logins JUST send the id, without spec.  If changes to the spec are detected (os_version, device_identifier, etc.), then provide id AND spec - this\u2019ll update the spec for the device   NOTE: device_identifier does NOT equal id / device_id. id / device_id are internal numbers for devices assigned by the assistance platform (server). Device identifier is the identifier provided by the client platform and should be provided in the specification.   REQUEST   POST /users/login\n\n{\n\"email\" : \"example@example.com\", \n\"password\" : \"password\",\n\"device\" : { \n    \"id\" : long, /* Optional: Provide ONLY id OR id and spec OR spec only - See description above!! */\n    \"os\" : string, /* e.g. android, ios, blackberry, windowsphone */\n    \"os_version\" : string, /* e.g. 5.1.1 */\n    \"brand\" : string, /* e.g. Samsung */\n    \"model\" : string, /* e.g. Galaxy XY */\n    \"device_identifier\" : string\n}   RESPONSE   HTTP/1.1 200 OK\n\n{\n\"token\" : string,\n\"device_id\" : long\n}",
            "title": "LOG IN"
        },
        {
            "location": "/api/rest-api-for-clients/#refresh-token",
            "text": "The client can request a new token within the time range of validity (normally 24 hours). This new token will be again valid for 24 hours.   REQUEST   POST /users/refresh_token\nX-AUTH-TOKEN: your_token   RESPONSE   HTTP/1.1 200 OK\n\n{\n\"token\" : string\n}",
            "title": "REFRESH TOKEN"
        },
        {
            "location": "/api/rest-api-for-clients/#register-for-back-channel",
            "text": "A device needs to explicitly register a back-channel from the platform to this device of the user, because the project uses existing messaging services especially for the mobile devices. So the client has to pass the token of the specific service to the platform.  (Note: This is NOT done / integrated in the login request, because it needs a asynchronous request to acquire the token from the respective service)   REQUEST   POST /devices/register_for_messaging\nX-AUTH-TOKEN: your_token\n\n{ \n  \"device_id\" : long, /* This is the ID that is contained in the login response */ \n  \"messaging_registration_id\" : string /* This is the ID / Token that is returned form the respective service, e.g. GCM */\n}   RESPONSE   HTTP/1.1 200 OK\n\n{\n}",
            "title": "Register for back-channel"
        },
        {
            "location": "/api/rest-api-for-clients/#list-users-devices",
            "text": "REQUEST   GET /devices/list\nX-AUTH-TOKEN: your_token   RESPONSE   HTTP/1.1 200 OK\n\n[\n    {\n        \"id\": long,\n        \"userId\": long,\n        \"brand\": string,\n        \"model\": string,\n        \"messagingRegistrationId\": string,\n        \"userDefinedName\": string,\n        \"lastUsage\": long,\n        \"os\": string,\n        \"os_version\": string,\n        \"device_identifier\": string\n    }, ...\n]",
            "title": "List users devices"
        },
        {
            "location": "/api/rest-api-for-clients/#set-user-defined-name-for-device",
            "text": "REQUEST   POST /devices/set_user_defined_name\nX-AUTH-TOKEN: your_token\n\n{ \n  \"device_id\" : long,\n  \"user_defined_name\" : string /* The user defined name for a device, e.g. \"My Galaxy\" */\n}   RESPONSE   HTTP/1.1 200 OK\n\n{\n}",
            "title": "Set user defined name for device"
        },
        {
            "location": "/api/rest-api-for-clients/#get-users-profile-short-version",
            "text": "REQUEST   GET /users/profile/short\nX-AUTH-TOKEN: your_token   RESPONSE   HTTP/1.1 200 OK\n\n{\n\"firstName\" : \"Hans\",\n\"lastName\" : \"Mustermann\",\n\"email\" : \"hans.mustermann@domain.de\",\n\"lastLogin\" : long,\n\"joinedSince\" : long,\n}",
            "title": "Get user's profile: short version"
        },
        {
            "location": "/api/rest-api-for-clients/#get-users-profile-long-version",
            "text": "REQUEST   GET /users/profile/long\nX-AUTH-TOKEN: your_token   RESPONSE   HTTP/1.1 200 OK\n\n{\n\"firstName\" : \"Hans\",\n\"lastName\" : \"Mustermann\",\n\"email\" : \"hans.mustermann@domain.de\",\n\"services [NOT IMPLEMENTED]\"  : [{\n               \"name\" : \"Google\",\n               \"firstname\" : \"Hanso\",\n               \"lastname\" : \"Mustermanno\",\n               \"email\" : \"hans.mustermann@gmail.com\",\n               \"updated\" : long,\n               \"created\" : long\n               },\n               {\n               \"name\" : \"Facebook\",\n               \"firstname\" : \"Dieter\",\n               \"lastname\" : \"Klein\",\n               \"email\" : \"hans.mustermann@gmx.de\",\n               \"updated\" : long,\n               \"created\" : long\n               },\n               {\n               \"name\" : \"Xing\",\n               \"firstname\" : \"Hans\",\n               \"lastname\" : \"Mustermann\",\n               \"email\" : \"hans.mustermann@gmail.com\",\n               \"updated\" : long,\n               \"created\" : long\n               }],\n\"lastLogin\" : long,\n\"joinedSince\" : long,\n}",
            "title": "Get user's profile: long version"
        },
        {
            "location": "/api/rest-api-for-clients/#update-users-profile",
            "text": "REQUEST   PUT /users/profile\nX-AUTH-TOKEN: your_token\n\n{\n    \"firstname\" : \"Hans\",\n    \"lastname\" : \"Mustermann\",\n    \"services [NOT IMPLEMENTED]\"  : [{\n        \"name\" : \"Google\",\n        \"email\" : \"hans.mustermann@gmail.com\"\n    },\n    {\n        \"name\" : \"Facebook\",\n        \"email\" : \"hans.mustermann@gmx.de\"\n    }]\n}   RESPONSE   HTTP/1.1 200 OK",
            "title": "UPDATE user's profile"
        },
        {
            "location": "/api/rest-api-for-clients/#get-list-of-available-modules",
            "text": "REQUEST   (optional) :language = ISO 639-1 code for client language (e.g. en, de) [if parameter not specified, it is en]  GET /assistance/list/:language\nX-AUTH-TOKEN: your_token   RESPONSE   HTTP/1.1 200 OK\n\n[\n    {\n        \"name\": \"Quantified self\",\n        \"id\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.quantifiedself\",\n        \"logoUrl\": \"http://xyz.de/lgo123.png\",\n        \"descriptionShort\": \"Quantifies you in every way\",\n        \"descriptionLong\": \"Really quantifies out of every angle\",\n        \"requiredCapabilities\": [\n            { \n              \"type\" : \"accelerometer\",\n                \"collection_interval\": double, /* The maximum interval between event readings of this type (in seconds). Readings can be cached on the client. (in seconds) double; 1.0 = 1 measurement per second, 60.0 = 1 measurement per minute */\n                \"update_interval\": double, /* The maximum interval in seconds after which the sensor readings have to be sent to the platform. -1.0 means that that the readings are only sent when the device is connected via WiFi or hasn't sent any updates for 24 hours. */\n            },\n            { \n              \"type\" : \"position\",\n                \"accuracy\": int, /* Only available for the position sensor. 0: low, 1: balanced, 2: best */\n                \"collection_interval\": double,\n                \"update_interval\": double\n            }\n        ],\n        \"optionalCapabilites\": [\n            { \n              \"type\" : \"facebooktoken\",\n                \"permissions\": array of string /* The permissions to request from facebook for this module. e.g. [\"email\", \"public_profile\", \"user_friends\"] */\n            }\n        ],\n        \"copyright\": \"TK Department TU Darmstadt\"\n        \"supportEmail\": \"support@xy.de\" /* E-Mail address where the end-user can get support regarding this module */\n    },\n    {\n        \"name\": \"Hot Places\",\n        \"id\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.hotplaces\",\n        \"logoUrl\": \"http://blabla.de/hotzone.png\",\n        \"descriptionShort\": \"Finds the hottest places\",\n        \"descriptionLong\": \"Finds the hottest places while you are moving\",\n        \"requiredCapabilities\": [\n{ \n              \"type\" : \"position\",\n                \"collection_frequency\": double, \n                \"required_update_frequency\": double, \n                \"min_required_readings_on_update\": int \n            }\n        ],\n        \"optionalCapabilites\": null,\n        \"copyright\": \"TK Department TU Darmstadt\",\n        \"supportEmail\": \"support@xy.de\" \n    }\n]",
            "title": "GET LIST OF AVAILABLE MODULES"
        },
        {
            "location": "/api/rest-api-for-clients/#activate-a-module",
            "text": "REQUEST   POST /assistance/activate\nX-AUTH-TOKEN: your_token\n\n{\n   \"module_id\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.quantifiedself\"\n}   RESPONSE   HTTP/1.1 200 OK",
            "title": "ACTIVATE A MODULE"
        },
        {
            "location": "/api/rest-api-for-clients/#deactivate-a-module",
            "text": "REQUEST   POST /assistance/deactivate\nX-AUTH-TOKEN: your_token\n\n{\n   \"module_id\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.quantifiedself\"\n}   RESPONSE   HTTP/1.1 200 OK",
            "title": "DEACTIVATE A MODULE"
        },
        {
            "location": "/api/rest-api-for-clients/#list-of-current-activations",
            "text": "Returns an array of IDs of the activated modules (for the authorized user).   REQUEST   GET /assistance/activations\nX-AUTH-TOKEN: your_token   RESPONSE   HTTP/1.1 200 OK\n\n[ \n    \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.quantifiedself\",\n]",
            "title": "List of current activations"
        },
        {
            "location": "/api/rest-api-for-clients/#current-information-from-modules",
            "text": "Returns a list of \u201cmodule information cards\u201d from the currently activated modules. A module information card provides a container of data which represents the last relevant information for the requesting user.  (required) :deviceId - The device id of the requesting device.  The content specification can be found here  Client Feedback Channel Format   REQUEST   GET /assistance/current/:deviceId\nX-AUTH-TOKEN: your_token   RESPONSE   HTTP/1.1 200 OK\n\n[\n    {\n        \"modulePackageName\": string,\n        \"content\": {\n            \"type\": string,\n            ...\n        },\n        \"created\": date\n    },\n    {\n        \"modulePackageName\": string,\n        \"content\": {\n            \"type\": string,\n            ...\n        },\n        \"created\": date\n    }\n]",
            "title": "Current information from modules"
        },
        {
            "location": "/api/rest-api-for-clients/#current-information-from-specific-module",
            "text": "Returns a list of \u201cmodule information cards\u201d from the requested module.  (required) :moduleId - The id of the module which should be asked about most current information.\n(required) :deviceId - The device id of the requesting device.   REQUEST   GET /assistance/:moduleId/current/:deviceId\nX-AUTH-TOKEN: your_token   RESPONSE   HTTP/1.1 200 OK\n\n[\n    {\n        \"moduleId\": \"de.tudarmstadt.informatik.tk.assistanceplatform.modules.hotplaces\",\n        \"timestamp\": 1446751643000,\n        \"payload\": string\n    }\n]",
            "title": "Current information from specific module"
        },
        {
            "location": "/api/rest-api-for-clients/#custom-request-to-a-module",
            "text": "With this endpoint it is possible to send very specific requests to a module. Normally this will only be used by module-specific clients. The platform acts like a proxy in this case.  (required) :moduleId - The id of the module which should be asked about most current information.\n(required) *path - The path that should be requested on the module.  Currently only GET and POST requests are possible.   REQUEST   GET/POST /assistance/:moduleId/custom/*path\nX-AUTH-TOKEN: your_token\n\n(optional) your POST-data   RESPONSE   HTTP/1.1 SPECIFIED BY RESPONDING MODULE\n\nSPECIFIED BY RESPONDING MODULE",
            "title": "Custom request to a module"
        },
        {
            "location": "/api/rest-api-for-clients/#sensor-data",
            "text": "",
            "title": "SENSOR DATA"
        },
        {
            "location": "/api/rest-api-for-clients/#uploading-sensor-data",
            "text": "The upload endpoint allows to upload multiple collected sensor readings in batch mode.  NOTE:  The sensor readings have to be sorted by time descanding, so the oldest events appear at first in the JSON.   REQUEST   POST /sensordata/upload\nX-AUTH-TOKEN: your_token\n\n{\n   \"device_id\" : the current device id (returned on login)\n   \"sensorreadings\" : [\n     {\n        \"type\" : sensortype (see below),\n        ... attributes of sensor (see below) ...\n     }\n   ]\n}   RESPONSE   HTTP/1.1 200 OK  The supported sensor types and required fields can be found here:   Sensor types",
            "title": "UPLOADING SENSOR DATA"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/",
            "text": "This page lists the supported sensors and the fields that the client has to provide when submitting the respective sensor readings.\n\n\nPOSITION SENSOR (type = \u201cposition\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"latitude\" : double\n    \"longitude\" : double\n    \"accuracyHorizontal\" : double        \n    \"speed\" : float /* Meters per second */\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"altitude\" : double\n    \"accuracyVertical\" : double \n    \"course\" : int\n    \"floor\" : int\n\n\n\n\nGYROSCOPE SENSOR (type = \u201cgyroscope\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"x\" : double\n    \"y\" : double\n    \"z\" : double\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    xUncalibratedNoDrift : float\n    \"yUncalibratedNoDrift\" : float\n    \"zUncalibratedNoDrift\" : float\n\n    xUncalibratedEstimatedDrift  : float\n    \"yUncalibratedEstimatedDrift\" : float\n    \"zUncalibratedEstimatedDrift\" : float\n\n\n\n\nACCELEROMETER SENSOR ( type = \u201caccelerometer\u201d )\n\u00b6\n\n\n* REQUIRED\n\n    \"x\" : double\n    \"y\" : double\n    \"z\" : double\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"accuracy\" : int\n\n\n\n\nMAGNETIC FIELD SENSOR (type = \u201cmagneticfield\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"x\" : double\n    \"y\" : double\n    \"z\" : double\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"accuracy\" : int\n\n    \"xUncalibratedNoHardIron\" : float\n    \"yUncalibratedNoHardIron\" : float\n    \"zUncalibratedNoHardIron\" : float\n\n    \"xUncalibratedEstimatedIronBias\" : float\n    \"yUncalibratedEstimatedIronBias\" : float\n    \"zUncalibratedEstimatedIronBias\" : float\n\n\n\n\nMOTION ACTIVITY SENSOR (type = \u201cmotionactivity\u201d)\n\u00b6\n\n\nAll integer values here are probabilities (values: 0-100) in percent.\n\n\n* REQUIRED\n\n    \"walking\" : integer\n    \"running\" : integer\n    \"cycling\" : integer\n    \"driving\" : integer\n    \"stationary\" : integer\n    \"unknown\" : integer\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"onFoot\" : integer    \n    \"tilting\" : integer\n\n\n\n\nCONNECTION EVENT (type = \u201cconnection\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"isWifi\" : boolean \n    \"isMobile\" : boolean \n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n\n\n\nWIFI CONNECTION EVENT (type = \u201cwificonnection\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"ssid\" : string \n    \"bssid\" : string\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"channel\" : int   \n    \"frequency\" : int\n    \"linkSpeed\" : int\n    \"signalStrength\" : int\n    \"networkId\" : int\n\n\n\n\nMOBILE DATA CONNECTION EVENT (type = \u201cmobileconnection\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"carrierName\" : string\n    \"mobileCountryCode\" : string\n    \"mobileNetworkCode\" : string\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"voipAvailable\" : boolean  \n\n\n\n\nLOUDNESS EVENT (type = \u201cloudness\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"loudness\" : float \n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n\n\n\nFOREGROUND EVENT (type = \u201cforeground\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"eventType\" : string\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"packageName\" : string\n    \"appName\" : string\n    \"className\" : string\n    \"activityLabel\" : string\n    \"color\" : string\n    \"url\" : string\n    \"keystrokes\" : integer\n\n\n\n\nLIGHT EVENT (type = \u201clight\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"value\" : float,\n    \"accuracy\" : int,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n\n\n\n\nCALL LOG EVENT (type = \u201ccall_log\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"callId\" : long,\n    \"callType\" : int,\n    \"name\" : String,\n    \"number\" : String,\n    \"date\" : long,\n    \"duration\" : long,\n    \"isNew\" : boolean,\n    \"isUpdated\" : boolean,\n    \"isDeleted\" : boolean,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n\n\n\n\nNETWORK TRAFFIC EVENT (type = \u201cnetworktraffic\u201d)\n\u00b6\n\n\n* REQUIRED\n    \"appName\" : string,\n    \"rxBytes\" : long,\n    \"txBytes\" : long,\n    \"background\" : boolean,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n    \"longitude\" : double,\n    \"latitude\" : double\n\n\n\n\n\nPOWERSTATE EVENT (type = \u201cpowerstate\u201d)\n\u00b6\n\n\n* REQUIRED\n\n    \"isCharging\" : boolean,\n    \"percent\" : float\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"chargingState\" : int, <\u2014  0: NONE, 1: LOW, 2: OKAY, 3: FULL, 4: MALFUNCTION/NOT CHARGING, BUT CONNECTED\n    \"chargingMode\" : int,  <\u2014  0: AC, 1: USB, 2: WIRELESS (currently only Android)\n    \"powerSaveMode\" : boolean <\u2014 (currently only iOS)\n\n\n\n\nRINGTONE EVENT (type = \u201cringtone\u201d)\n\u00b6\n\n\n* REQUIRED\n    \"mode\" : int,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n\n\n\nRUNNING PROCESS EVENT (type = \u201crunningprocess\u201d)\n\u00b6\n\n\n* REQUIRED\n    \"name\" : string,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n\n\n\nRUNNING TASK EVENT (type = \u201crunningtask\u201d)\n\u00b6\n\n\n* REQUIRED\n    \"name\" : string,\n    \"stackPosition\" : int,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n\n\n\nRUNNING SERVICE EVENT (type = \u201crunningservice\u201d)\n\u00b6\n\n\n* REQUIRED\n    \"packageName\" : string,\n    \"className\" : string,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n\n\n\nPOWERLEVEL EVENT (type = \u201cpowerlevel\u201d)\n\u00b6\n\n\n* REQUIRED\n    \"percent\" : float,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n\n\n\nCALENDAR EVENT (type = \u201ccalendar\u201d)\n\u00b6\n\n\n* REQUIRED\n    \"eventId\" : string,\n    \"calendarId\" : string,\n    \"allDay\" : boolean,\n    \"availability\" : int, // -1: NotSupported, 0: Busy, 1: Free, 2: Tentative und 3: Unavailable.\n    \"description\" : string,\n    \"startDate\" : string, // ISO 8601\n    \"endDate\" : string, // ISO 8601\n    \"location\" : string,\n    \"status\" : int, // -1: none, 0: Tentative, 1: Confirmed, 2: Canceled,\n    \"title\" : string,\n    \"recurrenceRule\" : string,\n    \"alarms\" : [{ /* array of alarms */\n        \"type\" : int, /* REQUIRED */\n        \"defaultOffset\" : boolean, /* REQUIRED* /\n        \"offset\" : int, /* OPTIONAL */\n        \"absoluteDate\" : string, // ISO 8601 /* OPTIONAL */\n        \"proximity\" : int, // <- 0: None, 1: Enter, 2: Leave (Types for location based alarm) /* OPTIONAL */\n        \"locationTitle\" : string, /* OPTIONAL */\n        \"locationLatitude\" : double, /* OPTIONAL */\n        \"locationLongitude\" : double, /* OPTIONAL */\n        \"locationRadius\" : double (in meters) /* OPTIONAL */\n    }],\n    \"isDeleted\" : boolean,\n    \"created\" : string // ISO 8601\n\n* OPTIONAL\n\n    \"URL\" : string,\n    \"isDetached\" : boolean,\n    \"lastModifiedDate\" : string, // ISO 8601\n    \"duration\" : string,\n    \"originalAllDay\" : boolean,\n    \"originalId\" : string,\n    \"originalInstanceTime\" : long,\n    \"recurrenceExceptionDate\" : string,\n    \"recurrenceExceptionRule\" : string,\n    \"lastDate\" : long,\n    \"recurrenceDate\" : string \n\n\n\n\nCONTACT EVENT (type = \u201ccontact\u201d)\n\u00b6\n\n\n* REQUIRED\n    \"globalContactId\" : string,\n    \"givenName\" : string,\n    \"familyName\" : string,\n    \"note\" : string,\n    \"isDeleted\" : boolean,\n\n* OPTIONAL\n\n    \"displayName\" : string,\n    \"starred\" : int,\n    \"lastTimeContacted\" : int,\n    \"timesContacted\" : int,\n    \"contactType\" : int,  <- 0: Person, 1: Organisation\n    \"namePrefix\" : string,\n    \"middleName\" : string,\n    \"previousFamilyName\" : string,\n    \"nameSuffix\" : string,\n    \"nickname\" : string,\n    \"phoneticGivenName\" : string,\n    \"phoneticMiddleName\" : string,\n    \"phoneticFamilyName\" : string,\n    \"organizationName\" : string,\n    \"departmentName\" : string,\n    \"jobTitle\" : string,\n    \"phoneNumbers\" : [{\"label\": \"Home\", \"value\": \"+49 123 456789\"}, {\"label\": \"Office\", \"value\": \"+49 987 654321\"}], // array of labeled values\n    \"emailAddresses\" : [{\"label\": \"Home\", \"value\": \"chris@fancymail.com\"}, {\"label\": \"Office\", \"value\": \"professor.christian@tu-darmstadt.de\"}] // array of labeled values\n\n\n\n\nSocial Networks\n\u00b6\n\n\nFacebook\n\u00b6\n\n\nFACEBOOK TOKEN EVENT (type = \u201cfacebooktoken\u201d)\n\u00b6\n\n\nNOTE: This is saved on per-user basis! Unlike the other event types (which are saved per-device basis).\n\n\n* REQUIRED\n    \"oauthToken\" : string,\n    \"permissions\" : [\"email\", \"public_profile\", \"user_friends\"], /* array of strings */\n    \"declinedPermissions\" : array of string,\n    \"created\" : string // ISO 8601\n\n\n\n\nTuCan\n\u00b6\n\n\nTUCAN CREDENTIALS EVENT (type = \u201ctucancredentials\u201d)\n\u00b6\n\n\nNOTE: This is saved on per-user basis! Unlike the other event types (which are saved per-device basis).\nNOTE 2: This will be saved encrypted, so only allowed modules will be able to get those values from the database.\n\n\n* REQUIRED\n    \"username\" : string,\n    \"password\" : string,\n    \"created\" : string // ISO 8601",
            "title": "Sensor types and api mapping"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#position-sensor-type-position",
            "text": "* REQUIRED\n\n    \"latitude\" : double\n    \"longitude\" : double\n    \"accuracyHorizontal\" : double        \n    \"speed\" : float /* Meters per second */\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"altitude\" : double\n    \"accuracyVertical\" : double \n    \"course\" : int\n    \"floor\" : int",
            "title": "POSITION SENSOR (type = \"position\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#gyroscope-sensor-type-gyroscope",
            "text": "* REQUIRED\n\n    \"x\" : double\n    \"y\" : double\n    \"z\" : double\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    xUncalibratedNoDrift : float\n    \"yUncalibratedNoDrift\" : float\n    \"zUncalibratedNoDrift\" : float\n\n    xUncalibratedEstimatedDrift  : float\n    \"yUncalibratedEstimatedDrift\" : float\n    \"zUncalibratedEstimatedDrift\" : float",
            "title": "GYROSCOPE SENSOR (type = \"gyroscope\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#accelerometer-sensor-type-accelerometer",
            "text": "* REQUIRED\n\n    \"x\" : double\n    \"y\" : double\n    \"z\" : double\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"accuracy\" : int",
            "title": "ACCELEROMETER SENSOR ( type = \"accelerometer\" )"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#magnetic-field-sensor-type-magneticfield",
            "text": "* REQUIRED\n\n    \"x\" : double\n    \"y\" : double\n    \"z\" : double\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"accuracy\" : int\n\n    \"xUncalibratedNoHardIron\" : float\n    \"yUncalibratedNoHardIron\" : float\n    \"zUncalibratedNoHardIron\" : float\n\n    \"xUncalibratedEstimatedIronBias\" : float\n    \"yUncalibratedEstimatedIronBias\" : float\n    \"zUncalibratedEstimatedIronBias\" : float",
            "title": "MAGNETIC FIELD SENSOR (type = \"magneticfield\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#motion-activity-sensor-type-motionactivity",
            "text": "All integer values here are probabilities (values: 0-100) in percent.  * REQUIRED\n\n    \"walking\" : integer\n    \"running\" : integer\n    \"cycling\" : integer\n    \"driving\" : integer\n    \"stationary\" : integer\n    \"unknown\" : integer\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"onFoot\" : integer    \n    \"tilting\" : integer",
            "title": "MOTION ACTIVITY SENSOR (type = \"motionactivity\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#connection-event-type-connection",
            "text": "* REQUIRED\n\n    \"isWifi\" : boolean \n    \"isMobile\" : boolean \n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!",
            "title": "CONNECTION EVENT (type = \"connection\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#wifi-connection-event-type-wificonnection",
            "text": "* REQUIRED\n\n    \"ssid\" : string \n    \"bssid\" : string\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"channel\" : int   \n    \"frequency\" : int\n    \"linkSpeed\" : int\n    \"signalStrength\" : int\n    \"networkId\" : int",
            "title": "WIFI CONNECTION EVENT (type = \"wificonnection\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#mobile-data-connection-event-type-mobileconnection",
            "text": "* REQUIRED\n\n    \"carrierName\" : string\n    \"mobileCountryCode\" : string\n    \"mobileNetworkCode\" : string\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"voipAvailable\" : boolean",
            "title": "MOBILE DATA CONNECTION EVENT (type = \"mobileconnection\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#loudness-event-type-loudness",
            "text": "* REQUIRED\n\n    \"loudness\" : float \n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!",
            "title": "LOUDNESS EVENT (type = \"loudness\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#foreground-event-type-foreground",
            "text": "* REQUIRED\n\n    \"eventType\" : string\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"packageName\" : string\n    \"appName\" : string\n    \"className\" : string\n    \"activityLabel\" : string\n    \"color\" : string\n    \"url\" : string\n    \"keystrokes\" : integer",
            "title": "FOREGROUND EVENT (type = \"foreground\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#light-event-type-light",
            "text": "* REQUIRED\n\n    \"value\" : float,\n    \"accuracy\" : int,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!",
            "title": "LIGHT EVENT (type = \"light\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#call-log-event-type-call_log",
            "text": "* REQUIRED\n\n    \"callId\" : long,\n    \"callType\" : int,\n    \"name\" : String,\n    \"number\" : String,\n    \"date\" : long,\n    \"duration\" : long,\n    \"isNew\" : boolean,\n    \"isUpdated\" : boolean,\n    \"isDeleted\" : boolean,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!",
            "title": "CALL LOG EVENT (type = \"call_log\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#network-traffic-event-type-networktraffic",
            "text": "* REQUIRED\n    \"appName\" : string,\n    \"rxBytes\" : long,\n    \"txBytes\" : long,\n    \"background\" : boolean,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n    \"longitude\" : double,\n    \"latitude\" : double",
            "title": "NETWORK TRAFFIC EVENT (type = \"networktraffic\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#powerstate-event-type-powerstate",
            "text": "* REQUIRED\n\n    \"isCharging\" : boolean,\n    \"percent\" : float\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!\n\n* OPTIONAL\n\n    \"chargingState\" : int, <\u2014  0: NONE, 1: LOW, 2: OKAY, 3: FULL, 4: MALFUNCTION/NOT CHARGING, BUT CONNECTED\n    \"chargingMode\" : int,  <\u2014  0: AC, 1: USB, 2: WIRELESS (currently only Android)\n    \"powerSaveMode\" : boolean <\u2014 (currently only iOS)",
            "title": "POWERSTATE EVENT (type = \"powerstate\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#ringtone-event-type-ringtone",
            "text": "* REQUIRED\n    \"mode\" : int,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!",
            "title": "RINGTONE EVENT (type = \"ringtone\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#running-process-event-type-runningprocess",
            "text": "* REQUIRED\n    \"name\" : string,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!",
            "title": "RUNNING PROCESS EVENT (type = \"runningprocess\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#running-task-event-type-runningtask",
            "text": "* REQUIRED\n    \"name\" : string,\n    \"stackPosition\" : int,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!",
            "title": "RUNNING TASK EVENT (type = \"runningtask\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#running-service-event-type-runningservice",
            "text": "* REQUIRED\n    \"packageName\" : string,\n    \"className\" : string,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!",
            "title": "RUNNING SERVICE EVENT (type = \"runningservice\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#powerlevel-event-type-powerlevel",
            "text": "* REQUIRED\n    \"percent\" : float,\n    \"created\" : \"2015-08-04T22:04:50Z\"    <--  in ISO 8601 format!",
            "title": "POWERLEVEL EVENT (type = \"powerlevel\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#calendar-event-type-calendar",
            "text": "* REQUIRED\n    \"eventId\" : string,\n    \"calendarId\" : string,\n    \"allDay\" : boolean,\n    \"availability\" : int, // -1: NotSupported, 0: Busy, 1: Free, 2: Tentative und 3: Unavailable.\n    \"description\" : string,\n    \"startDate\" : string, // ISO 8601\n    \"endDate\" : string, // ISO 8601\n    \"location\" : string,\n    \"status\" : int, // -1: none, 0: Tentative, 1: Confirmed, 2: Canceled,\n    \"title\" : string,\n    \"recurrenceRule\" : string,\n    \"alarms\" : [{ /* array of alarms */\n        \"type\" : int, /* REQUIRED */\n        \"defaultOffset\" : boolean, /* REQUIRED* /\n        \"offset\" : int, /* OPTIONAL */\n        \"absoluteDate\" : string, // ISO 8601 /* OPTIONAL */\n        \"proximity\" : int, // <- 0: None, 1: Enter, 2: Leave (Types for location based alarm) /* OPTIONAL */\n        \"locationTitle\" : string, /* OPTIONAL */\n        \"locationLatitude\" : double, /* OPTIONAL */\n        \"locationLongitude\" : double, /* OPTIONAL */\n        \"locationRadius\" : double (in meters) /* OPTIONAL */\n    }],\n    \"isDeleted\" : boolean,\n    \"created\" : string // ISO 8601\n\n* OPTIONAL\n\n    \"URL\" : string,\n    \"isDetached\" : boolean,\n    \"lastModifiedDate\" : string, // ISO 8601\n    \"duration\" : string,\n    \"originalAllDay\" : boolean,\n    \"originalId\" : string,\n    \"originalInstanceTime\" : long,\n    \"recurrenceExceptionDate\" : string,\n    \"recurrenceExceptionRule\" : string,\n    \"lastDate\" : long,\n    \"recurrenceDate\" : string",
            "title": "CALENDAR EVENT (type = \"calendar\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#contact-event-type-contact",
            "text": "* REQUIRED\n    \"globalContactId\" : string,\n    \"givenName\" : string,\n    \"familyName\" : string,\n    \"note\" : string,\n    \"isDeleted\" : boolean,\n\n* OPTIONAL\n\n    \"displayName\" : string,\n    \"starred\" : int,\n    \"lastTimeContacted\" : int,\n    \"timesContacted\" : int,\n    \"contactType\" : int,  <- 0: Person, 1: Organisation\n    \"namePrefix\" : string,\n    \"middleName\" : string,\n    \"previousFamilyName\" : string,\n    \"nameSuffix\" : string,\n    \"nickname\" : string,\n    \"phoneticGivenName\" : string,\n    \"phoneticMiddleName\" : string,\n    \"phoneticFamilyName\" : string,\n    \"organizationName\" : string,\n    \"departmentName\" : string,\n    \"jobTitle\" : string,\n    \"phoneNumbers\" : [{\"label\": \"Home\", \"value\": \"+49 123 456789\"}, {\"label\": \"Office\", \"value\": \"+49 987 654321\"}], // array of labeled values\n    \"emailAddresses\" : [{\"label\": \"Home\", \"value\": \"chris@fancymail.com\"}, {\"label\": \"Office\", \"value\": \"professor.christian@tu-darmstadt.de\"}] // array of labeled values",
            "title": "CONTACT EVENT (type = \"contact\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#social-networks",
            "text": "",
            "title": "Social Networks"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#facebook",
            "text": "",
            "title": "Facebook"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#facebook-token-event-type-facebooktoken",
            "text": "NOTE: This is saved on per-user basis! Unlike the other event types (which are saved per-device basis).  * REQUIRED\n    \"oauthToken\" : string,\n    \"permissions\" : [\"email\", \"public_profile\", \"user_friends\"], /* array of strings */\n    \"declinedPermissions\" : array of string,\n    \"created\" : string // ISO 8601",
            "title": "FACEBOOK TOKEN EVENT (type = \"facebooktoken\")"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#tucan",
            "text": "",
            "title": "TuCan"
        },
        {
            "location": "/api/sensor-types-and-api-mapping/#tucan-credentials-event-type-tucancredentials",
            "text": "NOTE: This is saved on per-user basis! Unlike the other event types (which are saved per-device basis).\nNOTE 2: This will be saved encrypted, so only allowed modules will be able to get those values from the database.  * REQUIRED\n    \"username\" : string,\n    \"password\" : string,\n    \"created\" : string // ISO 8601",
            "title": "TUCAN CREDENTIALS EVENT (type = \"tucancredentials\")"
        },
        {
            "location": "/deploy/deploying-with-ansible/",
            "text": "Deploying with Ansible\n\u00b6\n\n\nIn this section you will read how to deploy the Assistant Platform with Ansible.\n\n\nGetting started\n\u00b6\n\n\nFollow these few steps for easy installation with open source \nAnsible\n IT automation tool.\n\n\nPrerequisites on your host machine\n\u00b6\n\n\n\n\nPython >= 2.7\n\n\nAnsible >= 2.1\n\n\nLinux system (tested on Ubuntu 16.04)\n\n\n\n\nInstallation instructions\n\u00b6\n\n\n\n\nStep 1\n: Clone repository into some directory\n\n\nStep 2\n: Open \nconfig.yml\n (\u201cassistance-platform-server/deployment/ansible/config/config.yml\u201d) with an editor and configure your parameters. \nDefault\n: it is ready to be installed on localhost (don\u2019t forget to edit hosts.yml if you not willing to install on localhost).\n\n\nStep 3\n: After you configured it, cd to \u201cassistance-platform-server\\deployment\\ansible\" and run command \u201cansible-playbook playbook.yml\u201d. The Ansible installation will begin.\n\n\nStep 4\n: Check installation was successfull by visiting http://localhost/\n\n\nStep 5\n: Your copy of \nAssistance Platform\n is up and running. Read documentation for \nmodule development\n.",
            "title": "Deploying with ansible"
        },
        {
            "location": "/deploy/deploying-with-ansible/#deploying-with-ansible",
            "text": "In this section you will read how to deploy the Assistant Platform with Ansible.",
            "title": "Deploying with Ansible"
        },
        {
            "location": "/deploy/deploying-with-ansible/#getting-started",
            "text": "Follow these few steps for easy installation with open source  Ansible  IT automation tool.",
            "title": "Getting started"
        },
        {
            "location": "/deploy/deploying-with-ansible/#prerequisites-on-your-host-machine",
            "text": "Python >= 2.7  Ansible >= 2.1  Linux system (tested on Ubuntu 16.04)",
            "title": "Prerequisites on your host machine"
        },
        {
            "location": "/deploy/deploying-with-ansible/#installation-instructions",
            "text": "Step 1 : Clone repository into some directory  Step 2 : Open  config.yml  (\u201cassistance-platform-server/deployment/ansible/config/config.yml\u201d) with an editor and configure your parameters.  Default : it is ready to be installed on localhost (don\u2019t forget to edit hosts.yml if you not willing to install on localhost).  Step 3 : After you configured it, cd to \u201cassistance-platform-server\\deployment\\ansible\" and run command \u201cansible-playbook playbook.yml\u201d. The Ansible installation will begin.  Step 4 : Check installation was successfull by visiting http://localhost/  Step 5 : Your copy of  Assistance Platform  is up and running. Read documentation for  module development .",
            "title": "Installation instructions"
        },
        {
            "location": "/deploy/deploying-with-docker/",
            "text": "Motivation\n\u00b6\n\n\nIn some cases one might to have an isolated \u201cAssistance Platform\u201d instance for your own. Theses could be for example:\n\n Testing own modules\n\n Testing custom clients\n* Run integration tests\n\n\nThis document will provide you with the needed information on how to set up such an isolated instance.\n\n\nPrerequisites\n\u00b6\n\n\nWe tried making these steps as easy as possible by using \nDocker\n. In order to understand Docker and the available possibilities, you should also check out the \nDocker User Guide\n. This page also contains instructions how to install Docker on your machine.\n\n\nCURRENTLY you need to send a mail with your Docker Hub username to bennet.jeutter@gmail.com. This\u2019ll change in the future (own dedicated repository). [TODO]\n\n\nDeploying, stopping and removing\n\u00b6\n\n\nDeploying an isolated \u201cAssistance Platform\u201d\n\u00b6\n\n\n\n\nCheckout the \nAssistance Platform Docker Environment Description\n\n\ncd\n into your \ndocker\n folder\n\n\nrun \ndocker-compose up\n\n\n\n\nFinish! You now have your own \u201cAssistance Platform\u201d instance running. \n\n\nStop the instance\n\u00b6\n\n\nIn order to stop the \u201cAssistance Platform\u201d just use \ndocker-compose stop\n. This will shut down the Docker containers and \u201cfreeze\u201d them. The next time you\u2019ll fire \ndocker-compose up\n they will be un-freezed and started again.\n\n\nRemove the instance\n\u00b6\n\n\nSometimes you might want to start a completely fresh instance (purge the old data etc.). Therefore you should stop the instance (\ndocker-compose stop\n) and then run \ndocker-compose rm\n. NOTE that this will be permanent and all persisted data  until then will be lost!\n\n\nTesting against your isolated instance\n\u00b6\n\n\nOn some machines (OSX and windows) Docker will spawn a VM for you. You will probably need the IP of this machine. Therefore type: \ndocker-machine ls\n which will give you the IP(s) of your VM(s). Use the right own (usually default).\n\n\nOn Linux \u201clocalhost\u201d should be fine.\n\n\nLimitations for module developers\n\u00b6\n\n\nCurrently the Apache Spark Module is NOT working properly if trying connecting your module form outside the Docker machine, since the Spark Master can only be accessed from the inside. In order to test your Apache Spark implementations, you can activate the so called \n\u201clocal mode\u201d\n.\n\n\nDeploying in (quasi) production mode for standalone servers\n\u00b6\n\n\nIn order to keep data safe and allow automatic restarts after reboot the production config should be used. Therefore use:\n\nsudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up",
            "title": "Deploying with docker"
        },
        {
            "location": "/deploy/deploying-with-docker/#motivation",
            "text": "In some cases one might to have an isolated \u201cAssistance Platform\u201d instance for your own. Theses could be for example:  Testing own modules  Testing custom clients\n* Run integration tests  This document will provide you with the needed information on how to set up such an isolated instance.",
            "title": "Motivation"
        },
        {
            "location": "/deploy/deploying-with-docker/#prerequisites",
            "text": "We tried making these steps as easy as possible by using  Docker . In order to understand Docker and the available possibilities, you should also check out the  Docker User Guide . This page also contains instructions how to install Docker on your machine.  CURRENTLY you need to send a mail with your Docker Hub username to bennet.jeutter@gmail.com. This\u2019ll change in the future (own dedicated repository). [TODO]",
            "title": "Prerequisites"
        },
        {
            "location": "/deploy/deploying-with-docker/#deploying-stopping-and-removing",
            "text": "",
            "title": "Deploying, stopping and removing"
        },
        {
            "location": "/deploy/deploying-with-docker/#deploying-an-isolated-assistance-platform",
            "text": "Checkout the  Assistance Platform Docker Environment Description  cd  into your  docker  folder  run  docker-compose up   Finish! You now have your own \u201cAssistance Platform\u201d instance running.",
            "title": "Deploying an isolated \"Assistance Platform\""
        },
        {
            "location": "/deploy/deploying-with-docker/#stop-the-instance",
            "text": "In order to stop the \u201cAssistance Platform\u201d just use  docker-compose stop . This will shut down the Docker containers and \u201cfreeze\u201d them. The next time you\u2019ll fire  docker-compose up  they will be un-freezed and started again.",
            "title": "Stop the instance"
        },
        {
            "location": "/deploy/deploying-with-docker/#remove-the-instance",
            "text": "Sometimes you might want to start a completely fresh instance (purge the old data etc.). Therefore you should stop the instance ( docker-compose stop ) and then run  docker-compose rm . NOTE that this will be permanent and all persisted data  until then will be lost!",
            "title": "Remove the instance"
        },
        {
            "location": "/deploy/deploying-with-docker/#testing-against-your-isolated-instance",
            "text": "On some machines (OSX and windows) Docker will spawn a VM for you. You will probably need the IP of this machine. Therefore type:  docker-machine ls  which will give you the IP(s) of your VM(s). Use the right own (usually default).  On Linux \u201clocalhost\u201d should be fine.",
            "title": "Testing against your isolated instance"
        },
        {
            "location": "/deploy/deploying-with-docker/#limitations-for-module-developers",
            "text": "Currently the Apache Spark Module is NOT working properly if trying connecting your module form outside the Docker machine, since the Spark Master can only be accessed from the inside. In order to test your Apache Spark implementations, you can activate the so called  \u201clocal mode\u201d .",
            "title": "Limitations for module developers"
        },
        {
            "location": "/deploy/deploying-with-docker/#deploying-in-quasi-production-mode-for-standalone-servers",
            "text": "In order to keep data safe and allow automatic restarts after reboot the production config should be used. Therefore use: sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up",
            "title": "Deploying in (quasi) production mode for standalone servers"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/",
            "text": "This document will provide you with all basic infos you need to get started with developing a module for the \u201cAssistance Platform\u201d.\n\n\nIntroduction\n\u00b6\n\n\nAssistance platform\n\u00b6\n\n\nThe Assistance Platform is a project which aims on providing assistance to the user in all thinkable situations. For example notify the user in certain situations or set his phone to silent mode in a meeting. BUT the Assistance Platform itself isn\u2019t that intelligent in the first place. It basically \u201cjust\u201d offers a nice technical interface for clients to push and pull data. The real value comes form so called \u201cmodules\u201d, see the following section.## \n\n\nModule\n\u00b6\n\n\nA module is some sort of extension of the \u201cAssistance Platform\u201d. It should implement assistance logic (when to notify the user, when to send a mail etc.) but it can also implement the extraction of higher-level information from a stream of user / device events. So as a module developer you will implement an \u201cAssistance Module\u201d and (optionally) a \u201cData (Processing) Module\u201d. Multiple Modules (normally one Assistance and one Data Module) are put together in a so called \u201cModule Bundle\u201d. More of that later.\n\n\nBasic workflow / communication ways\n\u00b6\n\n\nThe platform does collect necessary data from registered (and active) user. For example it tracks the position and app usage. Furthermore users can activate (and deactivate) modules to support the user. \n\n\nProactive assistance\n\u00b6\n\n\nAll activated modules will be notified by the platform about the users events (e.g. positions). Data Modules then are able to receive and process these events and gain higher level events. Assistance Modules then can react on those higher level events and tell the platform to trigger some action on the client device(s), e.g. send a notification, set display brightness. \n\n\nReactive assistance\n\u00b6\n\n\nA user can always request current assistance information from the platform. The platform will then ask all activated modules (for this particular user) if they have relevant information. The responses of the modules will be collected, prioritized and sent back to the requesting user who then can inspect the offered assistance. A module can specifiy to show text, images, maps, links, etc.. These information are organized in so called \u201cInformation Cards\u201d. Each module can provide such a \u201cInformation Card\u201d which is then presented to the user, alongside the \u201cInformation Cards\u201d of other modules (if any).\n\n\nOverview Platform\n\u00b6\n\n\nHere you find an very simplified image over the interactions between clients, platform and modules.\n\n\n\n\nGetting started!\n\u00b6\n\n\nSo now you should be able to somehow understand the concept and you want to implement your own module, what to do? This guide will show you how to implement a \u201cDrive calm\u201d module. It should measure the speed of a user and proactively warn him if he is going faster than 100km/h. The reactive assistance should show him how fast he is going.\n\n\nHint: You don\u2019t like tutorials and want to immediately get hands on working code?\n\u00b6\n\n\nCheck out the repository and have a look at the \u201cDriveCalmModule\u201d project. [TODO ggf. Link einf\u00fcgen und so]\n\n\nPrerequisites\n\u00b6\n\n\nPlease make sure you have the following things installed on your developer machine:\n\n JDK8\n\n Appropriate Java IDE (e.g. Eclipse)\n* Maven\n\n\nCreate your project\n\u00b6\n\n\nCreate a new maven project and give it the name \u201cDriveCalmModule\u201d. Then add the following dependency to your pom.xml:\n\n\n<dependency>\n  <groupId>de.tudarmstadt.informatik.tk.assistanceplatform</groupId>\n  <artifactId>AssistancePlatformModuleAPI</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n</dependency>\n\n\n\n\nFurthermore add the following repo to your pom.xml:\n\n\n    <repositories>\n        <repository>\n            <releases>\n                <enabled>false</enabled>\n                <updatePolicy>always</updatePolicy>\n                <checksumPolicy>warn</checksumPolicy>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n                <updatePolicy>never</updatePolicy>\n                <checksumPolicy>fail</checksumPolicy>\n            </snapshots>\n            <id>assi-nexus</id>\n            <name>Assi Nexus</name>\n            <url>http://130.83.163.56:9001/content/repositories/snapshots</url>\n            <layout>default</layout>\n        </repository>\n    </repositories>\n\n\n\n\nWhat to implement first?\n\u00b6\n\n\nSo as a module developer your are extending a very specific family of classes and therewith specify your \u201cModule Bundle\u201d. So the starting point for your module will be the extension of the \nModuleBundle\n class:\n\n\npackage de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module;\n\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.Module;\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.bundle.ModuleBundle;\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.bundle.ModuleBundleInformation;\n\npublic class DriveCalmModuleBundle extends ModuleBundle {\n\n    @Override\n    public String getModuleId() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public ModuleBundleInformation getBundleInformation() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    protected Module[] initializeContainedModules() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n}\n\n\n\n\nSo what you will need to implement is:\n\n \ngetModuleId()\n - Just return the ID of your module, make sure that it is unique.\n\n \ngetBundleInformation()\n - Here you can specify the bundle information. These are mainly needed for presenting relevant information to the end-user.\n* \ninitializeContainedModules()\n - This is the most important part. Here you\u2019ll construct the contained Assistance and Data Module(s)\n\n\nLets begin with the super-simple \ngetModuleId\n method:\n\n\nprivate static final String ID = \"de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm\";\n\n@Override\npublic String getModuleId() {\n    return ID;\n}\n\n\n\n\nThen implement the \ngetBundleInformation()\n method like following:\n\n\n@Override\npublic ModuleBundleInformation getBundleInformation() {\n    String name = \"Drive calm\";\n    String logoUrl = \"http://urltologo\";\n    String shortDescription = \"Helps you maintaining a moderate speed limit while driving\";\n    String longDescription = \"This module will measure your speed and warn you if you go faster then 100km/h. In the request-assistance mode you can view your current speed.\";\n    String copyright = \"Copyright by YOU 2015\";\n    String devMail = \"youremail@adress.com\";\n    String supportMail = devMail;\n\n    Capability[] requiredCapabilities = new Capability[] { new Capability(\n            \"position\", 1, 2) };\n\n    Capability[] optionalCapabilites = new Capability[] { new Capability(\n            \"motionactivity\", 1, 2) };\n\n    ModuleBundleInformation info = new ModuleBundleInformation(name,\n            logoUrl, shortDescription, longDescription,\n            requiredCapabilities, optionalCapabilites, copyright, devMail,\n            supportMail);\n\n    return info;\n}\n\n\n\n\nWhat did happen here? We declared a \nModuleBundleInformation\n object which contains name, description, etc.. From the technical point of view the \nmost important thing here is the definition of the so called \u201cCapabilities\u201d\n. \n\n\nWith capabilities you define the requirements that your module needs from the users devices. For the required capabilities we defined the following parameters:\n\n \n\"position\"\n - Event Type - This is the name of the sensor / event we need from the users device. In this case long / lat position events.\n\n \n1\n - Collection Interval - We want the device to collect these evens in an interval of 1 second and store them locally.\n* \n2\n - Required update interval - We want to get the events delivered at least in an interval of 2 seconds\n\n\nBeside the required capabilities a module can define optional capabilities, that it can use to improve the assistance quality. In the case above we request \u201cmotion activity\u201d events, which can tell the probability that a user is driving.\n\n\nHere you can find out which sensors / event types are available: \nSensor types and API mapping\n\n\nThe next step is implementing the \ninitializedContainedModules()\n method:\n\n\n@Override\nprotected Module[] initializeContainedModules() {\n    Module assistanceModule = new DriveCalmAssistanceModule();\n    Module dataModule = new DriveCalmDataModule();\n\n    return new Module[] {\n        assistanceModule,\n        dataModule\n    };\n}\n\n\n\n\nYou just instantiate your modules and return them combined in an array. But wait\u2026 we don\u2019t have these classes yet? Yes, right, lets create them!\n\n\nImplementing the modules\n\u00b6\n\n\nData Module\n\u00b6\n\n\nThe goal of the data module is to detect if the user is going faste than 100km/h and firing a respective event, so the assistance module can react on this. The raw skeleton will look like this:\n\n\npackage de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module;\n\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.DataModule;\n\npublic class DriveCalmDataModule extends DataModule {\n\n    @Override\n    protected void doBeforeStartup() {\n        // TODO Auto-generated method stub\n    }\n\n    @Override\n    protected void doAfterStartup() {\n        // TODO Auto-generated method stub\n    }\n}\n\n\n\n\nWe will need to implement the \ndoBeforeStartup\n method. The \ndoAfterStartup\n method can be left blank.\n\n\nThe \ndoBeforeStartup\n method can be used to register a event listener for specific type of events (e.g. position). It can also be used to start specific algorithms or a Apache Spark application.\n\n\nHere is the plan for our simple module:\n\n Listen for positions events\n\n Store the last event of a user in a local hashmap\n\n On each new event calculate the traveled distance between the two positions\n\n Therewith calculate the speed and fire a \nDriveCalmRecommendationEvent\n\n\nHere is an example implementation:\n\n\n    private HashMap<Long, Position> lastUserPositions = new HashMap<>();\n\n    private static final double kmPerHourThreshold = 100;\n\n    @Override\n    protected void doBeforeStartup() {\n        this.registerForEventOfType(Position.class, this::consumeEvent);\n    }\n\n    private void consumeEvent(Channel<Position> channel, Position newEvent) {\n        Long userId = newEvent.userId;\n\n        // Try getting the last user position\n        Position lastPosition = getLastUserPosition(userId);\n\n        // // If this isn't the first position then\n        if (lastPosition == null) {\n            // Create a new position entry for the current value\n            setLastUserPosition(newEvent);\n        } else {\n            // // We have a last position, so we can calculate a distance\n            // Check if the last position is older then the new position\n            if (lastPosition.getTimestamp().before(newEvent.getTimestamp())) {\n                // Difference based speed\n                double calculatedSpeed = (lastPosition.distance(newEvent) / 1000.0)\n                        / ((newEvent.getTimestamp().getTime() - lastPosition\n                                .getTimestamp().getTime()) / 1000.0 / 60. / 60.0);\n\n                DriveCalmRecommendationEvent recommendationEvent = buildRecommendationEvent(newEvent, calculatedSpeed);\n\n                if (calculatedSpeed > kmPerHourThreshold) {\n                    fireDriveCalmRecommendationForPosition(recommendationEvent);\n                }\n\n                // Mark this event as last position of user\n                setLastUserPosition(newEvent);\n            }\n        }\n    }\n\n    private DriveCalmRecommendationEvent buildRecommendationEvent(Position pos, double speed) {\n        DriveCalmRecommendationEvent event = new DriveCalmRecommendationEvent();\n        event.userId = pos.userId;\n        event.deviceId = pos.deviceId;\n        event.speed = speed;\n        event.timestamp = pos.timestamp;\n\n        return event;\n    }\n\n    private void fireDriveCalmRecommendationForPosition(Position pos) {\n        DriveCalmRecommendationEvent eventToFire = new DriveCalmRecommendationEvent();\n        eventToFire.userId = pos.userId;\n        this.emitEvent(eventToFire);\n    }\n\n\n\n\nThe detection logic could have been simplified by just checking the \nspeed\n attribute of the \nPosition\n event, but I wanted to present a slightly more complex alternative.\n\n\nImportant is the \nemitEvent\n method. Therewith we can push events into the event stream so other modules (including our Assistance module) can receive the information. We\u2019ll fire a \nDriveCalmRecommendationEvent\n - extends \nUserDeviceEvent\n (implies user id and device id) and adds a \nspeed\n field.\n\n\npackage de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module;\n\nimport de.tudarmstadt.informatik.tk.assistanceplatform.data.UserDeviceEvent;\n\npublic class DriveCalmRecommendationEvent extends UserDeviceEvent {\n    public double speed;\n\n    public double getSpeed() {\n        return speed;\n    }\n\n    public void setSpeed(double speed) {\n        this.speed = speed;\n    }\n}\n\n\n\n\nAssistanceModule\n\u00b6\n\n\nSo now we have the logic which detects the exceedance of 100km/h and then fires an respective event. We now want to write an \u201cAssistance Module\u201d which reacts to those \nDriveCalmRecommendationEvent\n events and warns the user. So lets start with an empty extension of the \nAssistanceModule\n class.\n\n\npackage de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module;\n\nimport java.util.Collection;\n\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.assistance.AssistanceModule;\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.assistance.informationprovider.IInformationCardCustomizer;\nimport de.tudarmstadt.informatik.tk.assistanceplatform.services.modulerestserver.MappedServlet;\n\npublic class DriveCalmAssistanceModule extends AssistanceModule {\n    @Override\n    protected void doBeforeStartup() {\n        // TODO Auto-generated method stub\n    }\n\n    @Override\n    protected void doAfterStartup() {\n        // TODO Auto-generated method stub\n    }\n\n    @Override\n    protected IInformationCardCustomizer generateInformationCardCustomizer() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    protected Collection<MappedServlet> generateCustomServelets() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n}\n\n\n\n\nFirst lets go through the methods that can be implemented:\n\n \ndoBeforeStartup\n - Again here you can register for events, like in data modules. We\u2019ll register a listener for \nDriveCalmRecommendationEvent\ns.\n\n \ndoAfterStartup\n - E.g. start services. We\u2019ll leave it blank in this example.\n\n \ngenerateInformationCardCustomizer\n - Implement this if you want to provide a request-based assistance and provide so called \u201cInformation Cards\u201d to the user. We\u2019ll provide the last known speed of the user here.\n\n \ngenerateCustomServelets\n - Can be used to implement a custom REST Webservice for custom Client-Apps. We\u2019ll leave this blank for now.\n\n\nProactive assistance\n\u00b6\n\n\nLets start with the event listener:\n\n\n    @Override\n    protected void doBeforeStartup() {\n        this.registerForEventOfType(DriveCalmRecommendationEvent.class,\n                this::consumeDriveCalmRecommendation);\n    }\n\n    private void consumeDriveCalmRecommendation(\n            Channel<DriveCalmRecommendationEvent> channel,\n            DriveCalmRecommendationEvent event) {\n        getActionRunner().showMessage(event.userId,\n                new long[] { event.deviceId }, \"Exceeded speed threshold!\",\n                \"You are going \" + event.speed + \" km/h. Drive slower!\");\n    }\n\n\n\n\nInteresting here is the \ngetActionRunner()\n call. The action runner provides is a set of methods you can use to trigger actions on the client side, like showing a push message in this case. You just pass the receivers UserID + DeviceID(s) and set a title / message. The distribution to the devices will be handled by the platform. Now we have finished the proactive assistance - if the user is driving faster then 100km/h he will be presented with the specified message.\n\n\nReactive assistance (using Cassandra persistency!)\n\u00b6\n\n\nWhen the user opens his client he wants to get the most up-to-date information from his activated modules. The abstraction you need to implement therefore is a implementation of \nIInformationCardCustomizer\n and instantiate it in the \ngenerateInformationCardCustomizer\n method. The implementation of the \nIInformationCardCustomizer\n interface defines the customization of the \nModuleInformationCard\n which will be sent to the client.\n\n\nPreparing the data module for saving events\n\u00b6\n\n\nIn our case we\u2019ll just send back the current speed. But where to get that value from? Basically we calculate it in the Data Module, but we need to save the last speed somehow to make it available at request from the client. So at first we\u2019ll want to extend the Data Module code. We need to add the following steps:\n\n Create the required Cassandra Table Schema on startup.\n\n On each position change save the calculated speed.\n\n\nSo here are the modifications to the data module:\n\n\n    @Override\n    protected void doBeforeStartup() {\n        createSchema(); // This is new!\n        this.registerForEventOfType(Position.class, this::consumeEvent);\n    }\n\n    private void createSchema() { // This is new!\n        String schemaCQL = \"CREATE TABLE drive_calm_speeds \"\n                + \"(speed double, \"\n                + \"device_id bigint, \"\n                + \"user_id bigint, \"\n                + \"id uuid, \"\n                + \"timestamp timestamp, \"\n                + \"PRIMARY KEY (user_id)\"\n                + \") \";\n\n        CassandraServiceFactory.getSessionProxy().createSchema(schemaCQL);\n    }\n\n\n\n\nNext we add the save routine \n\n\n    private void consumeEvent(Channel<Position> channel, Position newEvent) {\n        Long userId = newEvent.userId;\n\n        // Try getting the last user position\n        Position lastPosition = getLastUserPosition(userId);\n\n        // // If this isn't the first position then\n        if (lastPosition == null) {\n            // Create a new position entry for the current value\n            setLastUserPosition(newEvent);\n        } else {\n            // // We have a last position, so we can calculate a distance\n            // Check if the last position is older then the new position\n            if (lastPosition.getTimestamp().before(newEvent.getTimestamp())) {\n                // Difference based speed\n                double calculatedSpeed = (lastPosition.distance(newEvent) / 1000.0)\n                        / ((newEvent.getTimestamp().getTime() - lastPosition\n                                .getTimestamp().getTime()) / 1000.0 / 60. / 60.0);\n\n                DriveCalmRecommendationEvent recommendationEvent = buildRecommendationEvent(newEvent, calculatedSpeed);\n\n                if (calculatedSpeed > kmPerHourThreshold) {\n                    fireDriveCalmRecommendationForPosition(recommendationEvent);\n                }\n\n                // Save in any case the current speed (THIS IS NEW!)\n                saveDriveCalmRecommendationForPosition(recommendationEvent);\n\n                // Mark this event as last position of user\n                setLastUserPosition(newEvent);\n            }\n        }\n    }\n\n        ...\n\n    private void saveDriveCalmRecommendationForPosition(DriveCalmRecommendationEvent eventToFire) {\n        this.getEventPersistency().persist(eventToFire);\n    }\n\n\n\n\nWhat does happen here? After calculating the \nDriveCalmRecommendationEvent\n we save it (despite the user exceeded the threshold or not). Therefore we use the \ngetEventPersistency()\n method which provides a implementation of the \nIUserDeviceEventPersistency\n which provides a \npersist(event)\n method. This is a convenience method to save events. In order for this to work we need to add the following \n@Table\n annotation to the \nDriveCalmRecommendationEvent\n (it tells which table to map the class to):\n\n\n@Table(name = \"drive_calm_speeds\")\npublic class DriveCalmRecommendationEvent extends UserDeviceEvent {\n...\n}\n\n\n\n\nProvide the last speed information on request\n\u00b6\n\n\nIn the last section we saved the most current speed to the Cassandra Database. We now want to provide a possibility for the user / client to get the last speed. Therefore we implement the \ngenerateInformationCardCustomizer\n which provides a implementation of the \nIInformationCardCustomizer\n interface.\nIn order to keep it simple, we\u2019ll use an anonymous \u201cinline\u201d interface implementation here. Here are the basic steps:\n\n Prepare a Cassandra query to get the speed of a user\n\n On request (\ncustomizeModuleInformationCard\n) get the last speed of the database.\n* Customize the card by setting the timestamp and payload (-> speed)\n\n\n[TODO: Wenn Template / View Kram gekl\u00e4rt ist hier einbinden]\n\n\n    @Override\n    protected IInformationCardCustomizer generateInformationCardCustomizer() {\n        PreparedStatement ps = getCassandraSession().prepare(\"SELECT * FROM drive_calm_speeds WHERE user_id = ? LIMIT 1\");\n\n        return new IInformationCardCustomizer() {\n\n            @Override\n            public void customizeModuleInformationCard(ModuleInformationCard card,\n                    long userId, long deviceId) {\n                ResultSet rs = getCassandraSession().execute(ps.bind(userId));\n\n                Row row = rs.one();\n\n                if(row != null) {\n                    // The timestamp should be set to represent the \"up-to-dateness\"\n                    card.timestamp = row.getTimestamp(\"timestamp\");\n\n                    // Set the payload to the saved speed (this is the information which will be presented to the user)\n                    card.payload = Double.toString(row.getDouble(\"speed\"));\n                }\n            }\n        };\n    }\n\n\n\n\nThe code should be straight forward. There are two important things: Note that the timestamp of the card is explicitly set, otherwise it\u2019ll be zero - that means, that it will be very unimportant for the user. Try to give a timestamp which is representative for the \u201ccurrentness\u201d of the module information. Another important thing to note is that the \ngetCassandraSession()\n is provided by the API. So you get a preconfigured Cassandra Session with which you can work with :+1:. But always be sure to think of efficient indexing and querying of the Cassandra Database!\n\n\nFire this thing up!\n\u00b6\n\n\nThe last step to get this running is adding a main method. For the sake of simplicity we add it to the module bundle. Assuming you want to run the module against the default system just use:\n\n\npublic static void main(String[] args) {\n    ModuleBundle bundle = new DriveCalmModuleBundle();\n    BundleBootstrapper.bootstrap(bundle);\n}\n\n\n\n\nThis\u2019ll initialize everything for you and start the module.\n\n\nIn case you are running a local test system (e.g. via Docker [TODO Link einf\u00fcgen]), then you can also pass a address of the platform, e.g.:\n\n\npublic static void main(String[] args) {\n    ModuleBundle bundle = new DriveCalmModuleBundle();\n    boolean localMode = true;\n    BundleBootstrapper.bootstrap(bundle, \"ip:port\", localMode);\n}\n\n\n\n\nFurthermore you see the declaration of localMode. This will deactivate the remote Apache Spark features and perform the respective computations on the locally available CPUs.\n\n\nDeployment\n\u00b6\n\n\n[TODO Jenkins usw. erkl\u00e4ren]\n\n\nApache Spark Requirements\n\u00b6\n\n\nIf your data module uses Apache Spark as processing engine then you need to provide a \u201cfat jar\u201d. This \u201cfat jar\u201d has to be saved in USER_HOME/{MODULE_ID}.jar on the machine which runs the Module Bundle.\n\n\nRoom for improvements\n\u00b6\n\n\n\n\nPr\u00fcfen wann letzte Nachricht gesendet wurde um Spam zu vermeiden\n\n\nUse user settings for the threshold\n\n\n\n\nWhere to go from now?\n\u00b6\n\n\nTo get an overview which data is available you should inspect the \nde.tudarmstadt.informatik.tk.assistanceplatform.data\n package which contains the sensor / event POJOs.\n\n\nFurthermore you should inspect the provided \nAssistanceModuleAPI\n and especially the provided services.\n\n Client Action Runner\n\n Persistency\n* Custom Servlets\n\n\nIf you want to develop complex modules you should deep dive into \nApache Spark\n and its \nDocs\n.",
            "title": "Module developers. 1. getting started for module developers (wip)"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#introduction",
            "text": "",
            "title": "Introduction"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#assistance-platform",
            "text": "The Assistance Platform is a project which aims on providing assistance to the user in all thinkable situations. For example notify the user in certain situations or set his phone to silent mode in a meeting. BUT the Assistance Platform itself isn\u2019t that intelligent in the first place. It basically \u201cjust\u201d offers a nice technical interface for clients to push and pull data. The real value comes form so called \u201cmodules\u201d, see the following section.##",
            "title": "Assistance platform"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#module",
            "text": "A module is some sort of extension of the \u201cAssistance Platform\u201d. It should implement assistance logic (when to notify the user, when to send a mail etc.) but it can also implement the extraction of higher-level information from a stream of user / device events. So as a module developer you will implement an \u201cAssistance Module\u201d and (optionally) a \u201cData (Processing) Module\u201d. Multiple Modules (normally one Assistance and one Data Module) are put together in a so called \u201cModule Bundle\u201d. More of that later.",
            "title": "Module"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#basic-workflow-communication-ways",
            "text": "The platform does collect necessary data from registered (and active) user. For example it tracks the position and app usage. Furthermore users can activate (and deactivate) modules to support the user.",
            "title": "Basic workflow / communication ways"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#proactive-assistance",
            "text": "All activated modules will be notified by the platform about the users events (e.g. positions). Data Modules then are able to receive and process these events and gain higher level events. Assistance Modules then can react on those higher level events and tell the platform to trigger some action on the client device(s), e.g. send a notification, set display brightness.",
            "title": "Proactive assistance"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#reactive-assistance",
            "text": "A user can always request current assistance information from the platform. The platform will then ask all activated modules (for this particular user) if they have relevant information. The responses of the modules will be collected, prioritized and sent back to the requesting user who then can inspect the offered assistance. A module can specifiy to show text, images, maps, links, etc.. These information are organized in so called \u201cInformation Cards\u201d. Each module can provide such a \u201cInformation Card\u201d which is then presented to the user, alongside the \u201cInformation Cards\u201d of other modules (if any).",
            "title": "Reactive assistance"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#overview-platform",
            "text": "Here you find an very simplified image over the interactions between clients, platform and modules.",
            "title": "Overview Platform"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#getting-started",
            "text": "So now you should be able to somehow understand the concept and you want to implement your own module, what to do? This guide will show you how to implement a \u201cDrive calm\u201d module. It should measure the speed of a user and proactively warn him if he is going faster than 100km/h. The reactive assistance should show him how fast he is going.",
            "title": "Getting started!"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#hint-you-dont-like-tutorials-and-want-to-immediately-get-hands-on-working-code",
            "text": "Check out the repository and have a look at the \u201cDriveCalmModule\u201d project. [TODO ggf. Link einf\u00fcgen und so]",
            "title": "Hint: You don't like tutorials and want to immediately get hands on working code?"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#prerequisites",
            "text": "Please make sure you have the following things installed on your developer machine:  JDK8  Appropriate Java IDE (e.g. Eclipse)\n* Maven",
            "title": "Prerequisites"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#create-your-project",
            "text": "Create a new maven project and give it the name \u201cDriveCalmModule\u201d. Then add the following dependency to your pom.xml:  <dependency>\n  <groupId>de.tudarmstadt.informatik.tk.assistanceplatform</groupId>\n  <artifactId>AssistancePlatformModuleAPI</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n</dependency>  Furthermore add the following repo to your pom.xml:      <repositories>\n        <repository>\n            <releases>\n                <enabled>false</enabled>\n                <updatePolicy>always</updatePolicy>\n                <checksumPolicy>warn</checksumPolicy>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n                <updatePolicy>never</updatePolicy>\n                <checksumPolicy>fail</checksumPolicy>\n            </snapshots>\n            <id>assi-nexus</id>\n            <name>Assi Nexus</name>\n            <url>http://130.83.163.56:9001/content/repositories/snapshots</url>\n            <layout>default</layout>\n        </repository>\n    </repositories>",
            "title": "Create your project"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#what-to-implement-first",
            "text": "So as a module developer your are extending a very specific family of classes and therewith specify your \u201cModule Bundle\u201d. So the starting point for your module will be the extension of the  ModuleBundle  class:  package de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module;\n\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.Module;\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.bundle.ModuleBundle;\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.bundle.ModuleBundleInformation;\n\npublic class DriveCalmModuleBundle extends ModuleBundle {\n\n    @Override\n    public String getModuleId() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public ModuleBundleInformation getBundleInformation() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    protected Module[] initializeContainedModules() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n}  So what you will need to implement is:   getModuleId()  - Just return the ID of your module, make sure that it is unique.   getBundleInformation()  - Here you can specify the bundle information. These are mainly needed for presenting relevant information to the end-user.\n*  initializeContainedModules()  - This is the most important part. Here you\u2019ll construct the contained Assistance and Data Module(s)  Lets begin with the super-simple  getModuleId  method:  private static final String ID = \"de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm\";\n\n@Override\npublic String getModuleId() {\n    return ID;\n}  Then implement the  getBundleInformation()  method like following:  @Override\npublic ModuleBundleInformation getBundleInformation() {\n    String name = \"Drive calm\";\n    String logoUrl = \"http://urltologo\";\n    String shortDescription = \"Helps you maintaining a moderate speed limit while driving\";\n    String longDescription = \"This module will measure your speed and warn you if you go faster then 100km/h. In the request-assistance mode you can view your current speed.\";\n    String copyright = \"Copyright by YOU 2015\";\n    String devMail = \"youremail@adress.com\";\n    String supportMail = devMail;\n\n    Capability[] requiredCapabilities = new Capability[] { new Capability(\n            \"position\", 1, 2) };\n\n    Capability[] optionalCapabilites = new Capability[] { new Capability(\n            \"motionactivity\", 1, 2) };\n\n    ModuleBundleInformation info = new ModuleBundleInformation(name,\n            logoUrl, shortDescription, longDescription,\n            requiredCapabilities, optionalCapabilites, copyright, devMail,\n            supportMail);\n\n    return info;\n}  What did happen here? We declared a  ModuleBundleInformation  object which contains name, description, etc.. From the technical point of view the  most important thing here is the definition of the so called \u201cCapabilities\u201d .   With capabilities you define the requirements that your module needs from the users devices. For the required capabilities we defined the following parameters:   \"position\"  - Event Type - This is the name of the sensor / event we need from the users device. In this case long / lat position events.   1  - Collection Interval - We want the device to collect these evens in an interval of 1 second and store them locally.\n*  2  - Required update interval - We want to get the events delivered at least in an interval of 2 seconds  Beside the required capabilities a module can define optional capabilities, that it can use to improve the assistance quality. In the case above we request \u201cmotion activity\u201d events, which can tell the probability that a user is driving.  Here you can find out which sensors / event types are available:  Sensor types and API mapping  The next step is implementing the  initializedContainedModules()  method:  @Override\nprotected Module[] initializeContainedModules() {\n    Module assistanceModule = new DriveCalmAssistanceModule();\n    Module dataModule = new DriveCalmDataModule();\n\n    return new Module[] {\n        assistanceModule,\n        dataModule\n    };\n}  You just instantiate your modules and return them combined in an array. But wait\u2026 we don\u2019t have these classes yet? Yes, right, lets create them!",
            "title": "What to implement first?"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#implementing-the-modules",
            "text": "",
            "title": "Implementing the modules"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#data-module",
            "text": "The goal of the data module is to detect if the user is going faste than 100km/h and firing a respective event, so the assistance module can react on this. The raw skeleton will look like this:  package de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module;\n\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.DataModule;\n\npublic class DriveCalmDataModule extends DataModule {\n\n    @Override\n    protected void doBeforeStartup() {\n        // TODO Auto-generated method stub\n    }\n\n    @Override\n    protected void doAfterStartup() {\n        // TODO Auto-generated method stub\n    }\n}  We will need to implement the  doBeforeStartup  method. The  doAfterStartup  method can be left blank.  The  doBeforeStartup  method can be used to register a event listener for specific type of events (e.g. position). It can also be used to start specific algorithms or a Apache Spark application.  Here is the plan for our simple module:  Listen for positions events  Store the last event of a user in a local hashmap  On each new event calculate the traveled distance between the two positions  Therewith calculate the speed and fire a  DriveCalmRecommendationEvent  Here is an example implementation:      private HashMap<Long, Position> lastUserPositions = new HashMap<>();\n\n    private static final double kmPerHourThreshold = 100;\n\n    @Override\n    protected void doBeforeStartup() {\n        this.registerForEventOfType(Position.class, this::consumeEvent);\n    }\n\n    private void consumeEvent(Channel<Position> channel, Position newEvent) {\n        Long userId = newEvent.userId;\n\n        // Try getting the last user position\n        Position lastPosition = getLastUserPosition(userId);\n\n        // // If this isn't the first position then\n        if (lastPosition == null) {\n            // Create a new position entry for the current value\n            setLastUserPosition(newEvent);\n        } else {\n            // // We have a last position, so we can calculate a distance\n            // Check if the last position is older then the new position\n            if (lastPosition.getTimestamp().before(newEvent.getTimestamp())) {\n                // Difference based speed\n                double calculatedSpeed = (lastPosition.distance(newEvent) / 1000.0)\n                        / ((newEvent.getTimestamp().getTime() - lastPosition\n                                .getTimestamp().getTime()) / 1000.0 / 60. / 60.0);\n\n                DriveCalmRecommendationEvent recommendationEvent = buildRecommendationEvent(newEvent, calculatedSpeed);\n\n                if (calculatedSpeed > kmPerHourThreshold) {\n                    fireDriveCalmRecommendationForPosition(recommendationEvent);\n                }\n\n                // Mark this event as last position of user\n                setLastUserPosition(newEvent);\n            }\n        }\n    }\n\n    private DriveCalmRecommendationEvent buildRecommendationEvent(Position pos, double speed) {\n        DriveCalmRecommendationEvent event = new DriveCalmRecommendationEvent();\n        event.userId = pos.userId;\n        event.deviceId = pos.deviceId;\n        event.speed = speed;\n        event.timestamp = pos.timestamp;\n\n        return event;\n    }\n\n    private void fireDriveCalmRecommendationForPosition(Position pos) {\n        DriveCalmRecommendationEvent eventToFire = new DriveCalmRecommendationEvent();\n        eventToFire.userId = pos.userId;\n        this.emitEvent(eventToFire);\n    }  The detection logic could have been simplified by just checking the  speed  attribute of the  Position  event, but I wanted to present a slightly more complex alternative.  Important is the  emitEvent  method. Therewith we can push events into the event stream so other modules (including our Assistance module) can receive the information. We\u2019ll fire a  DriveCalmRecommendationEvent  - extends  UserDeviceEvent  (implies user id and device id) and adds a  speed  field.  package de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module;\n\nimport de.tudarmstadt.informatik.tk.assistanceplatform.data.UserDeviceEvent;\n\npublic class DriveCalmRecommendationEvent extends UserDeviceEvent {\n    public double speed;\n\n    public double getSpeed() {\n        return speed;\n    }\n\n    public void setSpeed(double speed) {\n        this.speed = speed;\n    }\n}",
            "title": "Data Module"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#assistancemodule",
            "text": "So now we have the logic which detects the exceedance of 100km/h and then fires an respective event. We now want to write an \u201cAssistance Module\u201d which reacts to those  DriveCalmRecommendationEvent  events and warns the user. So lets start with an empty extension of the  AssistanceModule  class.  package de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module;\n\nimport java.util.Collection;\n\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.assistance.AssistanceModule;\nimport de.tudarmstadt.informatik.tk.assistanceplatform.modules.assistance.informationprovider.IInformationCardCustomizer;\nimport de.tudarmstadt.informatik.tk.assistanceplatform.services.modulerestserver.MappedServlet;\n\npublic class DriveCalmAssistanceModule extends AssistanceModule {\n    @Override\n    protected void doBeforeStartup() {\n        // TODO Auto-generated method stub\n    }\n\n    @Override\n    protected void doAfterStartup() {\n        // TODO Auto-generated method stub\n    }\n\n    @Override\n    protected IInformationCardCustomizer generateInformationCardCustomizer() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    protected Collection<MappedServlet> generateCustomServelets() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n}  First lets go through the methods that can be implemented:   doBeforeStartup  - Again here you can register for events, like in data modules. We\u2019ll register a listener for  DriveCalmRecommendationEvent s.   doAfterStartup  - E.g. start services. We\u2019ll leave it blank in this example.   generateInformationCardCustomizer  - Implement this if you want to provide a request-based assistance and provide so called \u201cInformation Cards\u201d to the user. We\u2019ll provide the last known speed of the user here.   generateCustomServelets  - Can be used to implement a custom REST Webservice for custom Client-Apps. We\u2019ll leave this blank for now.",
            "title": "AssistanceModule"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#proactive-assistance_1",
            "text": "Lets start with the event listener:      @Override\n    protected void doBeforeStartup() {\n        this.registerForEventOfType(DriveCalmRecommendationEvent.class,\n                this::consumeDriveCalmRecommendation);\n    }\n\n    private void consumeDriveCalmRecommendation(\n            Channel<DriveCalmRecommendationEvent> channel,\n            DriveCalmRecommendationEvent event) {\n        getActionRunner().showMessage(event.userId,\n                new long[] { event.deviceId }, \"Exceeded speed threshold!\",\n                \"You are going \" + event.speed + \" km/h. Drive slower!\");\n    }  Interesting here is the  getActionRunner()  call. The action runner provides is a set of methods you can use to trigger actions on the client side, like showing a push message in this case. You just pass the receivers UserID + DeviceID(s) and set a title / message. The distribution to the devices will be handled by the platform. Now we have finished the proactive assistance - if the user is driving faster then 100km/h he will be presented with the specified message.",
            "title": "Proactive assistance"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#reactive-assistance-using-cassandra-persistency",
            "text": "When the user opens his client he wants to get the most up-to-date information from his activated modules. The abstraction you need to implement therefore is a implementation of  IInformationCardCustomizer  and instantiate it in the  generateInformationCardCustomizer  method. The implementation of the  IInformationCardCustomizer  interface defines the customization of the  ModuleInformationCard  which will be sent to the client.",
            "title": "Reactive assistance (using Cassandra persistency!)"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#preparing-the-data-module-for-saving-events",
            "text": "In our case we\u2019ll just send back the current speed. But where to get that value from? Basically we calculate it in the Data Module, but we need to save the last speed somehow to make it available at request from the client. So at first we\u2019ll want to extend the Data Module code. We need to add the following steps:  Create the required Cassandra Table Schema on startup.  On each position change save the calculated speed.  So here are the modifications to the data module:      @Override\n    protected void doBeforeStartup() {\n        createSchema(); // This is new!\n        this.registerForEventOfType(Position.class, this::consumeEvent);\n    }\n\n    private void createSchema() { // This is new!\n        String schemaCQL = \"CREATE TABLE drive_calm_speeds \"\n                + \"(speed double, \"\n                + \"device_id bigint, \"\n                + \"user_id bigint, \"\n                + \"id uuid, \"\n                + \"timestamp timestamp, \"\n                + \"PRIMARY KEY (user_id)\"\n                + \") \";\n\n        CassandraServiceFactory.getSessionProxy().createSchema(schemaCQL);\n    }  Next we add the save routine       private void consumeEvent(Channel<Position> channel, Position newEvent) {\n        Long userId = newEvent.userId;\n\n        // Try getting the last user position\n        Position lastPosition = getLastUserPosition(userId);\n\n        // // If this isn't the first position then\n        if (lastPosition == null) {\n            // Create a new position entry for the current value\n            setLastUserPosition(newEvent);\n        } else {\n            // // We have a last position, so we can calculate a distance\n            // Check if the last position is older then the new position\n            if (lastPosition.getTimestamp().before(newEvent.getTimestamp())) {\n                // Difference based speed\n                double calculatedSpeed = (lastPosition.distance(newEvent) / 1000.0)\n                        / ((newEvent.getTimestamp().getTime() - lastPosition\n                                .getTimestamp().getTime()) / 1000.0 / 60. / 60.0);\n\n                DriveCalmRecommendationEvent recommendationEvent = buildRecommendationEvent(newEvent, calculatedSpeed);\n\n                if (calculatedSpeed > kmPerHourThreshold) {\n                    fireDriveCalmRecommendationForPosition(recommendationEvent);\n                }\n\n                // Save in any case the current speed (THIS IS NEW!)\n                saveDriveCalmRecommendationForPosition(recommendationEvent);\n\n                // Mark this event as last position of user\n                setLastUserPosition(newEvent);\n            }\n        }\n    }\n\n        ...\n\n    private void saveDriveCalmRecommendationForPosition(DriveCalmRecommendationEvent eventToFire) {\n        this.getEventPersistency().persist(eventToFire);\n    }  What does happen here? After calculating the  DriveCalmRecommendationEvent  we save it (despite the user exceeded the threshold or not). Therefore we use the  getEventPersistency()  method which provides a implementation of the  IUserDeviceEventPersistency  which provides a  persist(event)  method. This is a convenience method to save events. In order for this to work we need to add the following  @Table  annotation to the  DriveCalmRecommendationEvent  (it tells which table to map the class to):  @Table(name = \"drive_calm_speeds\")\npublic class DriveCalmRecommendationEvent extends UserDeviceEvent {\n...\n}",
            "title": "Preparing the data module for saving events"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#provide-the-last-speed-information-on-request",
            "text": "In the last section we saved the most current speed to the Cassandra Database. We now want to provide a possibility for the user / client to get the last speed. Therefore we implement the  generateInformationCardCustomizer  which provides a implementation of the  IInformationCardCustomizer  interface.\nIn order to keep it simple, we\u2019ll use an anonymous \u201cinline\u201d interface implementation here. Here are the basic steps:  Prepare a Cassandra query to get the speed of a user  On request ( customizeModuleInformationCard ) get the last speed of the database.\n* Customize the card by setting the timestamp and payload (-> speed)  [TODO: Wenn Template / View Kram gekl\u00e4rt ist hier einbinden]      @Override\n    protected IInformationCardCustomizer generateInformationCardCustomizer() {\n        PreparedStatement ps = getCassandraSession().prepare(\"SELECT * FROM drive_calm_speeds WHERE user_id = ? LIMIT 1\");\n\n        return new IInformationCardCustomizer() {\n\n            @Override\n            public void customizeModuleInformationCard(ModuleInformationCard card,\n                    long userId, long deviceId) {\n                ResultSet rs = getCassandraSession().execute(ps.bind(userId));\n\n                Row row = rs.one();\n\n                if(row != null) {\n                    // The timestamp should be set to represent the \"up-to-dateness\"\n                    card.timestamp = row.getTimestamp(\"timestamp\");\n\n                    // Set the payload to the saved speed (this is the information which will be presented to the user)\n                    card.payload = Double.toString(row.getDouble(\"speed\"));\n                }\n            }\n        };\n    }  The code should be straight forward. There are two important things: Note that the timestamp of the card is explicitly set, otherwise it\u2019ll be zero - that means, that it will be very unimportant for the user. Try to give a timestamp which is representative for the \u201ccurrentness\u201d of the module information. Another important thing to note is that the  getCassandraSession()  is provided by the API. So you get a preconfigured Cassandra Session with which you can work with :+1:. But always be sure to think of efficient indexing and querying of the Cassandra Database!",
            "title": "Provide the last speed information on request"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#fire-this-thing-up",
            "text": "The last step to get this running is adding a main method. For the sake of simplicity we add it to the module bundle. Assuming you want to run the module against the default system just use:  public static void main(String[] args) {\n    ModuleBundle bundle = new DriveCalmModuleBundle();\n    BundleBootstrapper.bootstrap(bundle);\n}  This\u2019ll initialize everything for you and start the module.  In case you are running a local test system (e.g. via Docker [TODO Link einf\u00fcgen]), then you can also pass a address of the platform, e.g.:  public static void main(String[] args) {\n    ModuleBundle bundle = new DriveCalmModuleBundle();\n    boolean localMode = true;\n    BundleBootstrapper.bootstrap(bundle, \"ip:port\", localMode);\n}  Furthermore you see the declaration of localMode. This will deactivate the remote Apache Spark features and perform the respective computations on the locally available CPUs.",
            "title": "Fire this thing up!"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#deployment",
            "text": "[TODO Jenkins usw. erkl\u00e4ren]",
            "title": "Deployment"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#apache-spark-requirements",
            "text": "If your data module uses Apache Spark as processing engine then you need to provide a \u201cfat jar\u201d. This \u201cfat jar\u201d has to be saved in USER_HOME/{MODULE_ID}.jar on the machine which runs the Module Bundle.",
            "title": "Apache Spark Requirements"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#room-for-improvements",
            "text": "Pr\u00fcfen wann letzte Nachricht gesendet wurde um Spam zu vermeiden  Use user settings for the threshold",
            "title": "Room for improvements"
        },
        {
            "location": "/developer/module-developers.-1.-getting-started-for-module-developers-(wip)/#where-to-go-from-now",
            "text": "To get an overview which data is available you should inspect the  de.tudarmstadt.informatik.tk.assistanceplatform.data  package which contains the sensor / event POJOs.  Furthermore you should inspect the provided  AssistanceModuleAPI  and especially the provided services.  Client Action Runner  Persistency\n* Custom Servlets  If you want to develop complex modules you should deep dive into  Apache Spark  and its  Docs .",
            "title": "Where to go from now?"
        },
        {
            "location": "/developer/module-developers.-2.-advanced.-providing-custom-rest-extension/",
            "text": "This document will provide you with information about extending the platforms REST API by providing module specific REST endpoints.\n\n\nPurpose of REST API Extensions\n\u00b6\n\n\nIn some cases there can be a need for clients that are specialized for a specific module. In order to be special these special clients need to access some REST API which offers more (specialized) endpoints than the generalized Platform API. For example the \u201cDrive Calm\u201d example module could offer a special endpoint where it provides a list of all speed exceedings of the last month. Or a \u201caction\u201d endpoint to clear the data, set specific setting, etc..\n\n\nHow does this extension from a communication perspective work?\n\u00b6\n\n\nThe client knows the IDs of modules. He then can make a normal HTTP request to \n/assistance/:module/custom/*path\n. The platform then will lookup the IP of the modules REST server and forward the request to \n*path\n on the modules REST server. \n\n\n\n\nHow can I implement a REST extension for my module?\n\u00b6\n\n\nIn order to build a REST extension you just need to implement the \ngenerateCustomServlets()\n in your \nAssistanceModule\n sub-class.\n\n\nYou can use normal servlets and wrap them with the \nMappedServlet\n class to map the paths. The constructor \nMappedServlet\n used in the following example maps a basic Jersey service class - this is the recommended way. But however you can also pass your custom \nServletHolder\n, if required. \nNote:\n When using the Jersey way, then you need to make sure, that all your servlets live in their own packages, otherwise the path mapping will be confused!\n\n\n    @Override\n    protected Collection<MappedServlet> generateCustomServelets() {\n        MappedServlet example = new MappedServlet(\"/example\", ExampleService.class);\n\n        return Arrays.asList(example);\n    }\n\n\n\n\nA example Jersey service could look like:\n\n\npackage de.tudarmstadt.informatik.tk.assistanceplatform.modules.example.assistance.examplews;\n\nimport javax.ws.rs.Consumes;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.POST;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/\")\npublic class ExampleService {\n    @Path(\"/test\")\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public String test() {\n        return \"{'test' : 'yes'}\";\n    }\n\n    @POST\n    @Path(\"/posttest\")\n    @Produces(MediaType.APPLICATION_JSON)\n    @Consumes(MediaType.APPLICATION_JSON)\n    public String posttest(String postData) {\n        return postData;\n    }\n}\n\n\n\n\nHow to know which user started the request?\n\u00b6\n\n\nJust read the \nASSISTANCE-USER-ID\n HTTP-Header-Field.\n\n\nHow to access Cassandra inside the custom endpoint?\n\u00b6\n\n\nServiceResourcesFactory.getInstance().getAssistanceModule().getCassandraSession()\n\n\nHow to excactly reach these endpoints?\n\u00b6\n\n\nFrom client perspective via platform\n\u00b6\n\n\nThe client should always go over the platform and can reach the custom endpoint (for the example above) on the following URLs: \nhttp://platform/assistance/{idOfExampleModule}/custom/example/test\nand \nhttp://platform/assistance/{idOfExampleModule}/custom/example/posttest\n\n\nFor testing purposes\n\u00b6\n\n\nFor testing just your module REST service you can use:\n\nhttp://localhost:21314/rest/custom/example/test\nand \nhttp://localhost:21314/rest/custom/example/posttest\n.\n\n\nSo like you can see \nhttp://localhost:21314/rest/custom/\n is the API fixed part of the URL, everything afterwards is specified by your servlet implementation.",
            "title": "Module developers. 2. advanced. providing custom rest extension"
        },
        {
            "location": "/developer/module-developers.-2.-advanced.-providing-custom-rest-extension/#purpose-of-rest-api-extensions",
            "text": "In some cases there can be a need for clients that are specialized for a specific module. In order to be special these special clients need to access some REST API which offers more (specialized) endpoints than the generalized Platform API. For example the \u201cDrive Calm\u201d example module could offer a special endpoint where it provides a list of all speed exceedings of the last month. Or a \u201caction\u201d endpoint to clear the data, set specific setting, etc..",
            "title": "Purpose of REST API Extensions"
        },
        {
            "location": "/developer/module-developers.-2.-advanced.-providing-custom-rest-extension/#how-does-this-extension-from-a-communication-perspective-work",
            "text": "The client knows the IDs of modules. He then can make a normal HTTP request to  /assistance/:module/custom/*path . The platform then will lookup the IP of the modules REST server and forward the request to  *path  on the modules REST server.",
            "title": "How does this extension from a communication perspective work?"
        },
        {
            "location": "/developer/module-developers.-2.-advanced.-providing-custom-rest-extension/#how-can-i-implement-a-rest-extension-for-my-module",
            "text": "In order to build a REST extension you just need to implement the  generateCustomServlets()  in your  AssistanceModule  sub-class.  You can use normal servlets and wrap them with the  MappedServlet  class to map the paths. The constructor  MappedServlet  used in the following example maps a basic Jersey service class - this is the recommended way. But however you can also pass your custom  ServletHolder , if required.  Note:  When using the Jersey way, then you need to make sure, that all your servlets live in their own packages, otherwise the path mapping will be confused!      @Override\n    protected Collection<MappedServlet> generateCustomServelets() {\n        MappedServlet example = new MappedServlet(\"/example\", ExampleService.class);\n\n        return Arrays.asList(example);\n    }  A example Jersey service could look like:  package de.tudarmstadt.informatik.tk.assistanceplatform.modules.example.assistance.examplews;\n\nimport javax.ws.rs.Consumes;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.POST;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/\")\npublic class ExampleService {\n    @Path(\"/test\")\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public String test() {\n        return \"{'test' : 'yes'}\";\n    }\n\n    @POST\n    @Path(\"/posttest\")\n    @Produces(MediaType.APPLICATION_JSON)\n    @Consumes(MediaType.APPLICATION_JSON)\n    public String posttest(String postData) {\n        return postData;\n    }\n}",
            "title": "How can I implement a REST extension for my module?"
        },
        {
            "location": "/developer/module-developers.-2.-advanced.-providing-custom-rest-extension/#how-to-know-which-user-started-the-request",
            "text": "Just read the  ASSISTANCE-USER-ID  HTTP-Header-Field.",
            "title": "How to know which user started the request?"
        },
        {
            "location": "/developer/module-developers.-2.-advanced.-providing-custom-rest-extension/#how-to-access-cassandra-inside-the-custom-endpoint",
            "text": "ServiceResourcesFactory.getInstance().getAssistanceModule().getCassandraSession()",
            "title": "How to access Cassandra inside the custom endpoint?"
        },
        {
            "location": "/developer/module-developers.-2.-advanced.-providing-custom-rest-extension/#how-to-excactly-reach-these-endpoints",
            "text": "",
            "title": "How to excactly reach these endpoints?"
        },
        {
            "location": "/developer/module-developers.-2.-advanced.-providing-custom-rest-extension/#from-client-perspective-via-platform",
            "text": "The client should always go over the platform and can reach the custom endpoint (for the example above) on the following URLs:  http://platform/assistance/{idOfExampleModule}/custom/example/test and  http://platform/assistance/{idOfExampleModule}/custom/example/posttest",
            "title": "From client perspective via platform"
        },
        {
            "location": "/developer/module-developers.-2.-advanced.-providing-custom-rest-extension/#for-testing-purposes",
            "text": "For testing just your module REST service you can use: http://localhost:21314/rest/custom/example/test and  http://localhost:21314/rest/custom/example/posttest .  So like you can see  http://localhost:21314/rest/custom/  is the API fixed part of the URL, everything afterwards is specified by your servlet implementation.",
            "title": "For testing purposes"
        },
        {
            "location": "/developer/module-developers.-3.-dockerize-your-module/",
            "text": "Since the Assistance Platform uses Docker for deployment and virtualization management it is recommended that you \u201cdockerize\u201d also your modules. This document provides you with the necessary steps to do so.\n\n\nMaven Setup\n\u00b6\n\n\nAt first you want to setup your maven project, especially in order for it to produce a FAT jar for Apache Spark. Therefore add the following plugin to your \npom.xml\n. NOTE that you need to replace \nYOUR_MAIN_CLASS\n with the absolute name of the class that contains your main method (e.g. de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module.DriveCalmModuleBundle).\n\n\n            <!-- Maven Assembly Plugin -->\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-assembly-plugin</artifactId>\n                <version>2.5</version>\n                <configuration>\n                    <!-- get all project dependencies -->\n                    <descriptorRefs>\n                        <descriptorRef>jar-with-dependencies</descriptorRef>\n                    </descriptorRefs>\n                    <!-- MainClass in mainfest make a executable jar -->\n                    <archive>\n                        <manifest>\n                            <mainClass>YOUR_MAIN_CLASS</mainClass>\n                        </manifest>\n                    </archive>\n\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>make-assembly</id>\n                        <!-- bind to the packaging phase -->\n                        <phase>package</phase>\n                        <goals>\n                            <goal>single</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n       </plugins>\n  </build>\n\n\n\n\nDockerize your module\n\u00b6\n\n\nDockerfile\n\u00b6\n\n\nYou need to write a \nDockerfile\n (yes, thats the exact name of the file) in order to dockerize your application. \n\n\nCreate a file with the following contents, however note that you need to fill out the following three parameters:\n\n YOURMODULE - The name of your project. In order to find out the exact jar file name, just run \nmvn package\n in the Terminal.\n\n YOURMODULEID - The ID for your bundle specified in your \nModuleBundle\n implementation\n* YOUR_MAIN_CLASS - Like in maven the absolute name of your main class (e.g \nde.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module.DriveCalmModuleBundle\n)\n\n\nFROM maven:3-jdk-8\n\nWORKDIR /code\n\n# Prepare by downloading dependencies\nADD pom.xml /code/pom.xml\nRUN [\"mvn\", \"dependency:resolve\"]\nRUN [\"mvn\", \"verify\"]\n\n# Adding source, compile and package into a fat jar\nADD src /code/src\nRUN [\"mvn\", \"package\"]\nRUN [\"cp\",\"target/YOURMODULE-jar-with-dependencies.jar\",\"/root/YOURMODULEID.jar\"]\n\nENTRYPOINT [\"mvn\",\"exec:java\",\"-D\",\"exec.mainClass=YOUR_MAIN_CLASS\"]\n\n\n\n\nBuild docker image\n\u00b6\n\n\nNow \ncd\n into your module directory (which contains the \nDockerfile\n). \nThen run: \ndocker build -t (DOCKERHUB_USERNAME/)YOUR_MODULE_NAME .\n\n\nThis will create the respective docker image. If you want to publish to an remote repository you need to adjust the \n-t\n parameter respectively. \n\n\nRun docker image\n\u00b6\n\n\nNow you can run an instance of your module by typing \ndocker run YOUR_MODULE_NAME\n. Use \ndocker run -d YOUR_MODULE_NAME\n to dettach from output (for background process). \n\n\nAdvice:\n If there are multiple modules running on the same machine, then pass the Module-REST-Port as argument to the main method via \n-Dexec.args\n. You can also do so for the IP.",
            "title": "Module developers. 3. dockerize your module"
        },
        {
            "location": "/developer/module-developers.-3.-dockerize-your-module/#maven-setup",
            "text": "At first you want to setup your maven project, especially in order for it to produce a FAT jar for Apache Spark. Therefore add the following plugin to your  pom.xml . NOTE that you need to replace  YOUR_MAIN_CLASS  with the absolute name of the class that contains your main method (e.g. de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module.DriveCalmModuleBundle).              <!-- Maven Assembly Plugin -->\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-assembly-plugin</artifactId>\n                <version>2.5</version>\n                <configuration>\n                    <!-- get all project dependencies -->\n                    <descriptorRefs>\n                        <descriptorRef>jar-with-dependencies</descriptorRef>\n                    </descriptorRefs>\n                    <!-- MainClass in mainfest make a executable jar -->\n                    <archive>\n                        <manifest>\n                            <mainClass>YOUR_MAIN_CLASS</mainClass>\n                        </manifest>\n                    </archive>\n\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>make-assembly</id>\n                        <!-- bind to the packaging phase -->\n                        <phase>package</phase>\n                        <goals>\n                            <goal>single</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n       </plugins>\n  </build>",
            "title": "Maven Setup"
        },
        {
            "location": "/developer/module-developers.-3.-dockerize-your-module/#dockerize-your-module",
            "text": "",
            "title": "Dockerize your module"
        },
        {
            "location": "/developer/module-developers.-3.-dockerize-your-module/#dockerfile",
            "text": "You need to write a  Dockerfile  (yes, thats the exact name of the file) in order to dockerize your application.   Create a file with the following contents, however note that you need to fill out the following three parameters:  YOURMODULE - The name of your project. In order to find out the exact jar file name, just run  mvn package  in the Terminal.  YOURMODULEID - The ID for your bundle specified in your  ModuleBundle  implementation\n* YOUR_MAIN_CLASS - Like in maven the absolute name of your main class (e.g  de.tudarmstadt.informatik.tk.assistanceplatform.drivecalm.module.DriveCalmModuleBundle )  FROM maven:3-jdk-8\n\nWORKDIR /code\n\n# Prepare by downloading dependencies\nADD pom.xml /code/pom.xml\nRUN [\"mvn\", \"dependency:resolve\"]\nRUN [\"mvn\", \"verify\"]\n\n# Adding source, compile and package into a fat jar\nADD src /code/src\nRUN [\"mvn\", \"package\"]\nRUN [\"cp\",\"target/YOURMODULE-jar-with-dependencies.jar\",\"/root/YOURMODULEID.jar\"]\n\nENTRYPOINT [\"mvn\",\"exec:java\",\"-D\",\"exec.mainClass=YOUR_MAIN_CLASS\"]",
            "title": "Dockerfile"
        },
        {
            "location": "/developer/module-developers.-3.-dockerize-your-module/#build-docker-image",
            "text": "Now  cd  into your module directory (which contains the  Dockerfile ). \nThen run:  docker build -t (DOCKERHUB_USERNAME/)YOUR_MODULE_NAME .  This will create the respective docker image. If you want to publish to an remote repository you need to adjust the  -t  parameter respectively.",
            "title": "Build docker image"
        },
        {
            "location": "/developer/module-developers.-3.-dockerize-your-module/#run-docker-image",
            "text": "Now you can run an instance of your module by typing  docker run YOUR_MODULE_NAME . Use  docker run -d YOUR_MODULE_NAME  to dettach from output (for background process).   Advice:  If there are multiple modules running on the same machine, then pass the Module-REST-Port as argument to the main method via  -Dexec.args . You can also do so for the IP.",
            "title": "Run docker image"
        },
        {
            "location": "/developer/preprocess-events-before-save-and-distribution/",
            "text": "Sometimes it is needed to preprocess an event that was sent by user. An example for this is the \u201cTuCan Credentials\u201d Event which contains plaintext user / password. Before storing and distributing this to the modules, the credentials need to be encrypted.\n\n\nThis can be done by implementing the \nIEventPreprocessor\n interface and passing a instance to the \nSpecialEventPreprocessor\n instance (currently instantiated in \nSensorDataController\n)",
            "title": "Preprocess events before save and distribution"
        },
        {
            "location": "/developer/rest-api-for-modules-(internal)/",
            "text": "Quick access\n\u00b6\n\n\n\n\nError messages\n\n\nModule: Register new module\n\n\n[Module: Localize module information] (#localizing-module-information)\n\n\nModule: Update module information\n\n\n\n\nMODULES (not intended to be used by any client! Just by modules!)\n\u00b6\n\n\nREGISTERING A MODULE\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nPOST /modules/register\n\n{\n        \"id\" : \"de.tudarmstadt.tk.assistance.hotzones\",\n        \"name\" : \"Hotzones\",\n        \"logoUrl\" : \"http://urlToLogo\",\n        \"descriptionShort\" : \"Short Description (255 chars)\",\n        \"descriptionLong\" : \"Long (2048 chars)\",\n        \"requiredCaps\" : [\n           { \n              \"type\" : \"position\",\n \"collection_interval\": double, /* The maximum interval between event readings of this type (in seconds). Readings can be cached on the client. (in seconds) double; 1.0 = 1 measurement per second, 60.0 = 1 measurement per minute */\n                \"update_interval\": double, /* The maximum interval in seconds after which the sensor readings have to be sent to the platform. -1.0 means that that the readings are only sent when the device is connected via WiFi or hasn't sent any updates for 24 hours. */\n            }\n        ]\n        \"optionalCaps\" : []\n        \"copyright\" : \"TK Informtik TU Darmstadt\",\n        \"administratorEmail\" : \"email of administrator\",\n        \"supportEmail\" : \"email of support\",\n        \"restContactAddress\" : \"address or just port of module rest server (e.g. 127.0.0.1:8123 or 8123)\"\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n\n\n\n\nLOCALIZING MODULE INFORMATION\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nPOST /modules/localize\n\n{\n        \"languageCode\" : \"de\",\n        \"id\" : \"de.tudarmstadt.tk.assistance.hotzones\",\n        \"name\" : \"Beliebte Orte\",\n        \"logoUrl\" : \"http://urlToGermanLogo\",\n        \"descriptionShort\" : \"Kurze Beschreibung (255 chars)\",\n        \"descriptionLong\" : \"Lange Beschreibung (2048 chars)\"\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n\n\n\n\nUPDATE MODULE INFORMATION\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nPOST /modules/update\n\n{\n        \"id\" : \"de.tudarmstadt.tk.assistance.hotzones\",\n        \"name\" : \"Hotzones\",\n        \"logoUrl\" : \"http://urlToLogo\",\n        \"descriptionShort\" : \"Short Description (255 chars)\",\n        \"descriptionLong\" : \"Long (2048 chars)\",\n        \"requiredCaps\" : [\n            {\n \"type\" : \"position\",\n \"collection_interval\": double, /* The maximum interval between event readings of this type (in seconds). Readings can be cached on the client. (in seconds) double; 1.0 = 1 measurement per second, 60.0 = 1 measurement per minute */\n                \"update_interval\": double, /* The maximum interval in seconds after which the sensor readings have to be sent to the platform. -1.0 means that that the readings are only sent when the device is connected via WiFi or hasn't sent any updates for 24 hours. */\n            }\n        ],\n        \"optionalCaps\" : [],\n        \"copyright\" : \"TK Informtik TU Darmstadt\",\n        \"administratorEmail\" : \"email of administrator\",\n        \"supportEmail\" : \"email of support\",\n        \"restContactAddress\" : \"address or just port of module rest server (e.g. 127.0.0.1:8123 or 8123)\"\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n\n\n\n\nSend message / data to client\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nPOST /action/sendmessage\n\n{\n  \"userId\" : long,\n  \"deviceIds\" : [ long values ],\n  \"visibleNotification\" : { /* optional */\n    \"title\" : string,\n    \"body\" : string\n  },\n  \"data\" : string /* Payload like action command in JSON format - TBD */\n}\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n\n\n\n\nGet list of activations for module\n\u00b6\n\n\n\n\nREQUEST\n\n\n\n\nGET /modules/activations/:moduleId\n\n\n\n\n\n\n\nRESPONSE\n\n\n\n\nHTTP/1.1 200 OK\n\n[ /* Array of user IDs that are registered for module with ID :moduleId */\nid_1,\n...,\nid_n\n]\n\n\n\n\ntbd\n\u00b6",
            "title": "Rest api for modules (internal)"
        },
        {
            "location": "/developer/rest-api-for-modules-(internal)/#quick-access",
            "text": "Error messages  Module: Register new module  [Module: Localize module information] (#localizing-module-information)  Module: Update module information",
            "title": "Quick access"
        },
        {
            "location": "/developer/rest-api-for-modules-(internal)/#modules-not-intended-to-be-used-by-any-client-just-by-modules",
            "text": "",
            "title": "MODULES (not intended to be used by any client! Just by modules!)"
        },
        {
            "location": "/developer/rest-api-for-modules-(internal)/#registering-a-module",
            "text": "REQUEST   POST /modules/register\n\n{\n        \"id\" : \"de.tudarmstadt.tk.assistance.hotzones\",\n        \"name\" : \"Hotzones\",\n        \"logoUrl\" : \"http://urlToLogo\",\n        \"descriptionShort\" : \"Short Description (255 chars)\",\n        \"descriptionLong\" : \"Long (2048 chars)\",\n        \"requiredCaps\" : [\n           { \n              \"type\" : \"position\",\n \"collection_interval\": double, /* The maximum interval between event readings of this type (in seconds). Readings can be cached on the client. (in seconds) double; 1.0 = 1 measurement per second, 60.0 = 1 measurement per minute */\n                \"update_interval\": double, /* The maximum interval in seconds after which the sensor readings have to be sent to the platform. -1.0 means that that the readings are only sent when the device is connected via WiFi or hasn't sent any updates for 24 hours. */\n            }\n        ]\n        \"optionalCaps\" : []\n        \"copyright\" : \"TK Informtik TU Darmstadt\",\n        \"administratorEmail\" : \"email of administrator\",\n        \"supportEmail\" : \"email of support\",\n        \"restContactAddress\" : \"address or just port of module rest server (e.g. 127.0.0.1:8123 or 8123)\"\n}   RESPONSE   HTTP/1.1 200 OK",
            "title": "REGISTERING A MODULE"
        },
        {
            "location": "/developer/rest-api-for-modules-(internal)/#localizing-module-information",
            "text": "REQUEST   POST /modules/localize\n\n{\n        \"languageCode\" : \"de\",\n        \"id\" : \"de.tudarmstadt.tk.assistance.hotzones\",\n        \"name\" : \"Beliebte Orte\",\n        \"logoUrl\" : \"http://urlToGermanLogo\",\n        \"descriptionShort\" : \"Kurze Beschreibung (255 chars)\",\n        \"descriptionLong\" : \"Lange Beschreibung (2048 chars)\"\n}   RESPONSE   HTTP/1.1 200 OK",
            "title": "LOCALIZING MODULE INFORMATION"
        },
        {
            "location": "/developer/rest-api-for-modules-(internal)/#update-module-information",
            "text": "REQUEST   POST /modules/update\n\n{\n        \"id\" : \"de.tudarmstadt.tk.assistance.hotzones\",\n        \"name\" : \"Hotzones\",\n        \"logoUrl\" : \"http://urlToLogo\",\n        \"descriptionShort\" : \"Short Description (255 chars)\",\n        \"descriptionLong\" : \"Long (2048 chars)\",\n        \"requiredCaps\" : [\n            {\n \"type\" : \"position\",\n \"collection_interval\": double, /* The maximum interval between event readings of this type (in seconds). Readings can be cached on the client. (in seconds) double; 1.0 = 1 measurement per second, 60.0 = 1 measurement per minute */\n                \"update_interval\": double, /* The maximum interval in seconds after which the sensor readings have to be sent to the platform. -1.0 means that that the readings are only sent when the device is connected via WiFi or hasn't sent any updates for 24 hours. */\n            }\n        ],\n        \"optionalCaps\" : [],\n        \"copyright\" : \"TK Informtik TU Darmstadt\",\n        \"administratorEmail\" : \"email of administrator\",\n        \"supportEmail\" : \"email of support\",\n        \"restContactAddress\" : \"address or just port of module rest server (e.g. 127.0.0.1:8123 or 8123)\"\n}   RESPONSE   HTTP/1.1 200 OK",
            "title": "UPDATE MODULE INFORMATION"
        },
        {
            "location": "/developer/rest-api-for-modules-(internal)/#send-message-data-to-client",
            "text": "REQUEST   POST /action/sendmessage\n\n{\n  \"userId\" : long,\n  \"deviceIds\" : [ long values ],\n  \"visibleNotification\" : { /* optional */\n    \"title\" : string,\n    \"body\" : string\n  },\n  \"data\" : string /* Payload like action command in JSON format - TBD */\n}   RESPONSE   HTTP/1.1 200 OK",
            "title": "Send message / data to client"
        },
        {
            "location": "/developer/rest-api-for-modules-(internal)/#get-list-of-activations-for-module",
            "text": "REQUEST   GET /modules/activations/:moduleId   RESPONSE   HTTP/1.1 200 OK\n\n[ /* Array of user IDs that are registered for module with ID :moduleId */\nid_1,\n...,\nid_n\n]",
            "title": "Get list of activations for module"
        },
        {
            "location": "/developer/rest-api-for-modules-(internal)/#tbd",
            "text": "",
            "title": "tbd"
        }
    ]
}