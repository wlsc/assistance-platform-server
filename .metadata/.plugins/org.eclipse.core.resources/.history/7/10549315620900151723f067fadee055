package de.tudarmstadt.informatik.tk.assistanceplatform.modules.hotplaces.assistance;

import java.util.HashMap;
import java.util.Map;

import de.tudarmstadt.informatik.tk.assistanceplatform.modules.AssistanceModule;
import de.tudarmstadt.informatik.tk.assistanceplatform.modules.hotplaces.data.HotPlaceFoundEvent;
import de.tudarmstadt.informatik.tk.assistanceplatform.services.messaging.MessagingService;
import de.tudarmstadt.informatik.tk.assistanceplatform.services.messaging.MessagingService.Channel;

public class HotPlacesAssistanceModule extends AssistanceModule {
	private MessagingService messagingService;
	
	public HotPlacesAssistanceModule(MessagingService messagingService) {
		this.messagingService = messagingService;
		
		Channel c = this.messagingService
		.channel(HotPlaceFoundEvent.class.getSimpleName());
		
		c.subscribeConsumer(this::consumeHotPlaceFoundEvent);
	}
	
	Map<Long, Long> lastNotifications = new HashMap<>();
	
	private void consumeHotPlaceFoundEvent(Channel c, Object data) {
		HotPlaceFoundEvent event = (HotPlaceFoundEvent)data;
		
		Long lastNotifiaction = lastNotifications.get(event.userId);
		
		long lastNotSinceNow = System.currentTimeMillis() - lastNotifiaction;
		
		if(lastNotifiaction != null && System.currentTimeMillis() - )
	}
	
	/*@Override
	public void didDetectInterestingHotPlacesForUser(long userId,
			HotPlace[] places) {
		// TODO: Push schicken und so
	}*/
}