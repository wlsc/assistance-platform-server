import static org.junit.Assert.*;

import org.junit.Test;


public class ModuleRegistryTest {

	ModuleRegistry registry = new ModuleRegistry();
	
	@Test
	public void test() {
		fail("Not yet implemented");
	}

	 var registry : ModuleRegistry = new ModuleRegistry

			    assertEquals(registry.currentRegistrations.length, 0)
			    
			    val registration1 = new ModuleRegistration("de.studentassist.xy",  "http://serveraddrs", Array(), Array())
			    registry.registerModule(registration1)
			    assertEquals(1, registry.currentRegistrations.length)
			    
			    val registration2 = new ModuleRegistration("de.hotzones.xy",  "http://serveraddrs", Array(), Array())
			    registry.registerModule(registration2)
			    assertEquals(2, registry.currentRegistrations.length)
			  }
			 
			  def testFaultyRegistrationTest {
			    
			    val countBefore = registry.currentRegistrations.length
			    
			    var exceptionThrown = false;
			    
			    try {
			      val registration1 = new ModuleRegistration("de.studentassist.xy",  "http://serveraddrs", Array(), Array())
			      registry.registerModule(registration1)
			      registry.registerModule(registration1)
			    } catch {
			      case e : ModuleRegistrationException => exceptionThrown = true
			    } finally {
			      assertEquals(true, exceptionThrown)
			    }
			    
			    assertEquals(1, registry.currentRegistrations.length)
			  }
}
