import de.tudarmstadt.informatik.tk.assistanceplatform.moduleregistry.*;

import static org.junit.Assert.*;

import org.junit.Test;


public class ModuleRegistryTest {

	private final ModuleRegistry registry = new ModuleRegistry();
	
	@Test
	public void simpleRegistrationTests() {
	    assertEquals(registry.getRegisterdModules().size(), 0);
	    
	    ModuleRegistration registration1 = new ModuleRegistration("de.studentassist.xy",  "http://serveraddrs", null, null);
	    registry.registerModule(registration1);
	    assertEquals(1, registry.getRegisterdModules().size());
	    
	    val registration2 = new ModuleRegistration("de.hotzones.xy",  "http://serveraddrs", Array(), Array())
	    registry.registerModule(registration2)
	    assertEquals(2, registry.getRegisterdModules().size());
	}

			  def testFaultyRegistrationTest {
			    
			    val countBefore = registry.currentRegistrations.length
			    
			    var exceptionThrown = false;
			    
			    try {
			      val registration1 = new ModuleRegistration("de.studentassist.xy",  "http://serveraddrs", Array(), Array())
			      registry.registerModule(registration1)
			      registry.registerModule(registration1)
			    } catch {
			      case e : ModuleRegistrationException => exceptionThrown = true
			    } finally {
			      assertEquals(true, exceptionThrown)
			    }
			    
			    assertEquals(1, registry.currentRegistrations.length)
			  }
}
